{"version":3,"sources":["components/common/Paginator/Paginator.module.scss","components/pages/test/Test.module.scss","bll/reducers/loginReducer.ts","api/api.ts","bll/reducers/registrationReducer.ts","bll/reducers/passwordRecoveryReducer.ts","bll/reducers/appReducer.ts","bll/reducers/profileReducer.ts","bll/reducers/packsReducer.ts","bll/reducers/cardsReducer.ts","bll/thunks/thunks.ts","components/pages/login/Login.tsx","components/pages/registration/Registration.tsx","components/pages/profile/Profile.tsx","components/pages/error-404/Error404.tsx","components/pages/password-recovery/PasswordRecovery.tsx","components/pages/enter-new-password/EnterNewPassword.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/Select/Select.tsx","components/common/Radio/Radio.tsx","components/common/Range/Range.tsx","components/common/DoubleRange/DoubleRange.tsx","components/pages/test/Test.tsx","components/common/Paginator/Paginator.tsx","components/pages/packs/Packs.tsx","components/pages/cards/Cards.tsx","components/pages/Routes.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","bll/reducers/enterNewPasswordReducer.ts","bll/store.ts","index.tsx","components/Header/Header.module.scss","components/pages/packs/Packs.module.scss","components/pages/cards/Cards.module.scss","components/pages/error-404/Error404.module.scss","components/pages/login/Login.module.scss","components/pages/registration/Registration.module.scss","components/pages/password-recovery/PasswordRecovery.module.scss"],"names":["module","exports","loginSlice","createSlice","name","initialState","isLogged","reducers","setLogged","state","action","payload","loginReducer","reducer","actions","axiosInst","axios","create","baseURL","withCredentials","authAPI","me","a","post","response","data","logIn","loginData","logOut","delete","register","registerData","recoverPassword","email","from","message","packsAPI","getPacks","paramsPayload","get","params","addNewPack","cardsPack","deletePack","cardsPackId","id","updatePack","put","cardsAPI","getCards","addNewCard","card","deleteCard","cardId","updateCard","registrationSlice","error","isRegistered","setRegisterError","registrationReducer","pasRecSlice","info","setPasRecover","passwordRecoveryReducer","appSlice","isLoading","isInitialized","setLoading","setAppError","setAppInitialized","appReducer","_id","avatar","publicCardPacksCount","created","undefined","updated","isAdmin","verified","rememberMe","profileSlice","setProfileData","profileReducer","request","packName","min","max","sortPacks","page","pageCount","user_id","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","packsSlice","setRequestParams","setCardPacks","packsReducer","cardsPack_id","cardAnswer","cardQuestion","sortCards","cards","cardsTotalCount","maxGrade","minGrade","packUserId","cardsSlice","setCards","cardsReducer","dispatch","getState","packs","console","log","Login","useState","isButtonDisabled","setButtonDisabled","useDispatch","useSelector","login","app","useEffect","formik","useFormik","initialValues","password","validate","values","errors","test","onSubmit","errorStyle","border","outlined","emailError","touched","passwordError","style","position","width","top","textAlign","size","to","PATH","PROFILE","className","c","loginPageContainer","handleSubmit","type","getFieldProps","color","buttonContainer","disabled","Registration","history","useHistory","registration","confirmPassword","registrationData","confirmPasswordError","LOGIN","registrationContainer","onClick","push","Profile","profile","profileContainer","src","alt","userId","Error404","e404","title","pic","PasswordRecovery","passwordRecovery","ENTER_NEW_PASSWORD","pasRecContainer","EnterNewPassword","EditableSpan","children","Option","SelectFromAnt","Select","options","mappedOptions","map","option","index","value","defaultValue","Radio","React","setValue","Group","onChange","e","target","Range","DoubleRange","defaultValues","range","Test","names","Paginator","memo","itemsTotalCount","changePageCount","changePage","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagesList","filter","p","pageSelected","margin","cursor","paginatorContainer","Packs","myId","setPackName","packsContainer","titleContainer","currentTarget","bodyContainer","tableContainer","pack","cardsCount","Date","toLocaleDateString","footerContainer","paginationContainer","Cards","useParams","packId","setCardQuestion","cardsContainer","question","answer","grade","TEST","REGISTRATION","PASSWORD_RECOVERY","PACKS","CARDS","Routes","path","exact","render","Header","navbar","activeClassName","active","right","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","enterNewPassword","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.67977097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageSelected\":\"Paginator_pageSelected__21e9X\",\"paginatorContainer\":\"Paginator_paginatorContainer__6TBRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__21i_8\"};","import {LoginStateType} from \"../../types/types\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState: LoginStateType = {\r\n        isLogged: false\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setLogged(state, action: PayloadAction<LoginStateType>) {\r\n            state.isLogged = action.payload.isLogged;\r\n        }\r\n    }\r\n})\r\n\r\nexport const loginReducer = loginSlice.reducer;\r\n\r\nexport const {setLogged} = loginSlice.actions;\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    LoginRequestType,\r\n    LogoutResponseType,\r\n    PasswordRecoveryRequestType,\r\n    PasswordRecoveryResponseType,\r\n    PostCardRequestType,\r\n    PostPackRequestType,\r\n    ProfileResponseType,\r\n    PutCardRequestType,\r\n    PutPackRequestType,\r\n    RegisterRequestType,\r\n    RegisterResponseType\r\n} from \"../types/types\";\r\n\r\n\r\nconst axiosInst = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n});\r\n\r\nexport const authAPI = {\r\n    me: async () => {\r\n        const response = await axiosInst\r\n            .post<{}, AxiosResponse<ProfileResponseType>>('auth/me', {});\r\n        return response.data;\r\n    },\r\n    logIn: async (loginData: LoginRequestType) => {\r\n        const response = await axiosInst\r\n            .post<LoginRequestType, AxiosResponse<ProfileResponseType>>(\r\n                'auth/login', {\r\n                    ...loginData\r\n                }\r\n            );\r\n        return response.data;\r\n    },\r\n    logOut: async () => {\r\n        const response = await axiosInst\r\n            .delete<LoginRequestType, AxiosResponse<LogoutResponseType>>(\r\n                'auth/me'\r\n            );\r\n        return response.data;\r\n    },\r\n    register: async (registerData: RegisterRequestType) => {\r\n        const response = await axiosInst\r\n            .post<RegisterRequestType, AxiosResponse<RegisterResponseType>>('auth/register', {\r\n                ...registerData\r\n            });\r\n        return response.data;\r\n    },\r\n    recoverPassword: async (email: string) => {\r\n        const response = await axiosInst\r\n            .post<PasswordRecoveryRequestType, AxiosResponse<PasswordRecoveryResponseType>>('auth/forgot', {\r\n                email,\r\n                from: 'test-front-admin <borisenk-anton@yandex.ru>',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\npassword recovery link: <a href='http://localhost:3000/friday_project#/password_recovery/$token$'>link</a>\r\n</div>`\r\n            });\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks: async (paramsPayload: GetPacksRequestType) => {\r\n        const response = await axiosInst\r\n            .get<GetPacksRequestType, AxiosResponse<GetPacksResponseType>>('cards/pack', {\r\n                params: {\r\n                    ...paramsPayload\r\n                }\r\n            });\r\n        return response.data;\r\n    },\r\n    addNewPack: async (cardsPack: PostPackRequestType) => {\r\n        await axiosInst\r\n            .post('cards/pack', cardsPack);\r\n    },\r\n    deletePack: async (cardsPackId: string) => {\r\n        await axiosInst\r\n            .delete('cards/pack', {\r\n                params: {\r\n                    id: cardsPackId\r\n                }\r\n            });\r\n    },\r\n    updatePack: async (cardsPack: PutPackRequestType) => {\r\n        await axiosInst\r\n            .put('cards/pack', cardsPack);\r\n    },\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards: async (paramsPayload: GetCardsRequestType) => {\r\n        const response = await axiosInst\r\n            .get<GetCardsRequestType, AxiosResponse<GetCardsResponseType>>('cards/card', {\r\n                params: {\r\n                    ...paramsPayload\r\n                }\r\n            });\r\n        return response.data;\r\n    },\r\n    addNewCard: async (card: PostCardRequestType) => {\r\n        await axiosInst\r\n            .post('cards/card', card);\r\n    },\r\n    deleteCard: async (cardId: string) => {\r\n        await axiosInst\r\n            .delete('cards/card', {\r\n                params: {\r\n                    id: cardId\r\n                }\r\n            });\r\n    },\r\n    updateCard: async (card: PutCardRequestType) => {\r\n        await axiosInst\r\n            .put('cards/card', card);\r\n    },\r\n}\r\n","import {RegisterResponseType} from \"../../types/types\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState: RegisterResponseType = {\r\n    error: '',\r\n    isRegistered: false\r\n}\r\n\r\nconst registrationSlice = createSlice({\r\n    name: 'registration',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRegisterError(state, action: PayloadAction<RegisterResponseType>){\r\n            state.error = action.payload.error;\r\n            state.isRegistered = action.payload.isRegistered;\r\n        }\r\n    }\r\n});\r\n\r\nexport const registrationReducer = registrationSlice.reducer;\r\n\r\nexport const {setRegisterError} = registrationSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {PasswordRecoveryResponseType} from \"../../types/types\";\r\n\r\n\r\nconst initialState: PasswordRecoveryResponseType = {\r\n    error: '',\r\n    info: ''\r\n}\r\n\r\nconst pasRecSlice = createSlice({\r\n    name: 'passwordRecovery',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setPasRecover(state, action: PayloadAction<PasswordRecoveryResponseType>){\r\n            state.error = action.payload.error\r\n            state.info = action.payload.info\r\n        }\r\n    }\r\n})\r\n\r\nexport const passwordRecoveryReducer = pasRecSlice.reducer;\r\n\r\nexport const {setPasRecover} = pasRecSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {AppStateType, Nullable} from \"../../types/types\";\r\n\r\n\r\nconst initialState: AppStateType = {\r\n    isLoading: false,\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setLoading(state, action: PayloadAction<{isLoading: boolean}>){\r\n            state.isLoading = action.payload.isLoading;\r\n        },\r\n        setAppError(state, action: PayloadAction<{error: Nullable<string>}>){\r\n            state.error = action.payload.error;\r\n        },\r\n        setAppInitialized(state, action: PayloadAction<{isInitialized: boolean}>){\r\n            state.isInitialized = action.payload.isInitialized;\r\n        }\r\n    }\r\n});\r\n\r\nexport const appReducer = appSlice.reducer;\r\n\r\nexport const {setLoading, setAppError, setAppInitialized} = appSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {ProfileResponseType} from \"../../types/types\";\r\n\r\nconst initialState: ProfileResponseType = {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: undefined,\r\n        updated: undefined,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: ''\r\n}\r\n\r\nconst profileSlice = createSlice({\r\n    name: 'profile',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setProfileData(state, action: PayloadAction<ProfileResponseType>) {\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const profileReducer = profileSlice.reducer;\r\n\r\nexport const {setProfileData} = profileSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    GetPacksStateType\r\n} from \"../../types/types\";\r\n\r\n\r\nconst initialState: GetPacksStateType = {\r\n    request: {\r\n        packName: undefined,\r\n        min: undefined,\r\n        max: undefined,\r\n        sortPacks: '0updated',\r\n        page: 1,\r\n        pageCount: 5,\r\n        user_id: undefined,\r\n    },\r\n    response: {\r\n        cardPacks: [],\r\n        cardPacksTotalCount: 0,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        page: 1,\r\n        pageCount: 5,\r\n    }\r\n}\r\n\r\nconst packsSlice = createSlice({\r\n    name: 'packs',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRequestParams(state, action: PayloadAction<GetPacksRequestType>){\r\n            state.request = action.payload;\r\n        },\r\n        setCardPacks(state, action: PayloadAction<GetPacksResponseType>) {\r\n            state.response = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const packsReducer = packsSlice.reducer;\r\n\r\nexport const {setCardPacks, setRequestParams} = packsSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    GetCardsStateType\r\n} from \"../../types/types\";\r\n\r\n\r\nconst initialState: GetCardsStateType = {\r\n    request: {\r\n        cardsPack_id: '',\r\n        cardAnswer: undefined,\r\n        cardQuestion: undefined,\r\n        min: undefined,\r\n        max: undefined,\r\n        sortCards: '0grade',\r\n        page: 1,\r\n        pageCount: 5,\r\n    },\r\n    response: {\r\n        cards: [],\r\n        cardsTotalCount: 0,\r\n        maxGrade: 0,\r\n        minGrade: 0,\r\n        page: 1,\r\n        pageCount: 5,\r\n        packUserId: \"\"\r\n    }\r\n}\r\n\r\nconst cardsSlice = createSlice({\r\n    name: 'cards',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRequestParams(state, action: PayloadAction<GetCardsRequestType>){\r\n            state.request = action.payload;\r\n        },\r\n        setCards(state, action: PayloadAction<GetCardsResponseType>) {\r\n            state.response = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const cardsReducer = cardsSlice.reducer;\r\n\r\nexport const {setCards, setRequestParams} = cardsSlice.actions;\r\n","import {Dispatch} from \"redux\";\r\nimport {setLogged} from \"../reducers/loginReducer\";\r\nimport {authAPI, cardsAPI, packsAPI} from \"../../api/api\";\r\nimport {\r\n    CardType,\r\n    LoginRequestType, PostCardRequestType,\r\n    PostPackRequestType, PutCardRequestType,\r\n    PutPackRequestType,\r\n    RegisterRequestType\r\n} from \"../../types/types\";\r\nimport {setRegisterError} from \"../reducers/registrationReducer\";\r\nimport {setPasRecover} from \"../reducers/passwordRecoveryReducer\";\r\nimport {setAppInitialized, setLoading} from \"../reducers/appReducer\";\r\nimport {setProfileData} from \"../reducers/profileReducer\";\r\nimport {setCardPacks} from \"../reducers/packsReducer\";\r\nimport {setCards} from \"../reducers/cardsReducer\";\r\n\r\n\r\nexport const logIn = (loginData: LoginRequestType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.logIn(loginData);\r\n        dispatch(setProfileData(response));\r\n        dispatch(setLogged({isLogged: true}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await authAPI.logOut();\r\n        dispatch(setLogged({isLogged: false}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const register = (registrationData: RegisterRequestType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.register(registrationData);\r\n        response && dispatch(setRegisterError({\r\n            isRegistered: true,\r\n            error: response.error\r\n        }));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const recoverPassword = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.recoverPassword(email);\r\n        response && dispatch(setPasRecover({...response}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const setAppInitialize = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.me();\r\n        dispatch(setProfileData(response));\r\n        dispatch(setLogged({isLogged: true}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n        dispatch(setAppInitialized({isInitialized: true}));\r\n    }\r\n}\r\n\r\nexport const getPacks = () => async (dispatch: Dispatch, getState: Function) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await packsAPI.getPacks(getState().packs.request);\r\n        response && dispatch(setCardPacks(response));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const addNewPack = (cardsPack: PostPackRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.addNewPack(cardsPack);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const deletePack = (cardsPackId: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.deletePack(cardsPackId);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const updatePack = (cardsPack: PutPackRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.updatePack(cardsPack);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const getCards = (cardsPackId: string) => async (dispatch: Dispatch<any>, getState: Function) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await cardsAPI.getCards({...getState().cards.request, cardsPack_id: cardsPackId});\r\n        response && dispatch(setCards(response));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const addNewCard = (card: PostCardRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.addNewCard(card);\r\n        dispatch(getCards(card.card.cardsPack_id));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string, cardsPackId: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.deleteCard(cardId);\r\n        dispatch(getCards(cardsPackId));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const updateCard = (card: PutCardRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.updateCard(card);\r\n        dispatch(getCards(card.card.cardsPack_id));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport c from \"./Login.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logIn} from \"../../../bll/thunks/thunks\";\r\nimport {\r\n    LoginFormikErrorType,\r\n    LoginRequestType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Spin} from \"antd\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\nexport const Login = () => {\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const isLogged = useSelector<RootStateType, boolean>(\r\n        state => state.login.isLogged\r\n    )\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values: LoginRequestType) => {\r\n            const errors: LoginFormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{3,}$/.test(values.password)) {\r\n                errors.password = 'Invalid password';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            setButtonDisabled(true);\r\n            dispatch(logIn(values));\r\n        },\r\n    });\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError, passwordError] = [\r\n        formik.touched.email && formik.errors.email,\r\n        formik.touched.password && formik.errors.password\r\n    ];\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.loginPageContainer}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        id='email'\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}/>\r\n                </label>\r\n                {\r\n                    formik.touched.email && formik.errors.email\r\n                        ? (\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>)\r\n                        : null\r\n                }\r\n                <label>\r\n                    Password\r\n                    <input\r\n                        id={'password'}\r\n                        type=\"password\"\r\n                        style={passwordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                </label>\r\n                {\r\n                    formik.touched.password && formik.errors.password\r\n                        ? (<div\r\n                            style={{color: 'red'}}>{formik.errors.password}</div>)\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <label>\r\n                        Remember me\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id={'rememberMe'}\r\n                            {...formik.getFieldProps('')}/>\r\n                    </label>\r\n                    <button type={'submit'} disabled={isButtonDisabled}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    RegisterFormikErrorType,\r\n    RegisterResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {useFormik} from \"formik\";\r\nimport c from \"./Registration.module.scss\";\r\nimport {Spin} from \"antd\";\r\nimport {register} from \"../../../bll/thunks/thunks\";\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const {\r\n        error,\r\n        isRegistered\r\n    } = useSelector<RootStateType, RegisterResponseType>(\r\n        state => state.registration\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik(\r\n        {\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            validate: (values) => {\r\n                const errors: RegisterFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n\r\n                if (!values.password) {\r\n                    errors.password = 'Required';\r\n                } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{3,}$/.test(values.password)) {\r\n                    errors.password = 'Invalid password';\r\n                }\r\n\r\n                if (!values.confirmPassword) {\r\n                    errors.confirmPassword = 'Required';\r\n                } else if (values.confirmPassword !== values.password) {\r\n                    errors.confirmPassword = 'Incorrect confirmation';\r\n                }\r\n\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                setButtonDisabled(true);\r\n                dispatch(register({...values}));\r\n            }\r\n        }\r\n    );\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError, passwordError, confirmPasswordError] = [\r\n        formik.touched.email && formik.errors.email,\r\n        formik.touched.password && formik.errors.password,\r\n        formik.touched.confirmPassword && formik.errors.confirmPassword\r\n    ];\r\n\r\n    const onCancelClick = () => {\r\n        history.push(PATH.LOGIN);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={'large'}/>\r\n        </div>\r\n    }\r\n\r\n    if ((isRegistered && !error)) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.registrationContainer}>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        id='email'\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                </label>\r\n                {\r\n                    emailError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.email}</div>\r\n                        : null\r\n                }\r\n                <label>\r\n                    Password\r\n                    <input\r\n                        id='password'\r\n                        type=\"password\"\r\n                        style={passwordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                </label>\r\n                {\r\n                    passwordError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.password}</div>\r\n                        : null\r\n                }\r\n                <label>\r\n                    Confirm password\r\n                    <input\r\n                        id='confirmPassword'\r\n                        type=\"password\"\r\n                        style={confirmPasswordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('confirmPassword')}\r\n                    />\r\n                </label>\r\n                {\r\n                    confirmPasswordError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.confirmPassword}</div>\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onCancelClick}>\r\n                        Cancel\r\n                    </button>\r\n                    <button type='submit' disabled={isButtonDisabled}>\r\n                        Register\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProfileResponseType, RootStateType} from \"../../../types/types\";\r\nimport c from \"./Profile.module.scss\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const {avatar, name, _id} = useSelector<RootStateType, ProfileResponseType>(state => state.profile);\r\n    const isLogged = useSelector<RootStateType, boolean>(\r\n        state => state.login.isLogged\r\n    )\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={c.profileContainer}>\r\n            <img src={avatar} alt=\"ava\"/>\r\n            <div className={c.name}>\r\n                <b>Name</b>: {name}\r\n            </div>\r\n            <div className={c.userId}>\r\n                <b>My ID</b>: {_id}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport c from './Error404.module.scss';\r\n\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={c.error}>\r\n            <div className={c.e404}>404</div>\r\n            <div className={c.title}>Page not found!</div>\r\n            <div className={c.pic}>̿ ̿ ̿ ̿ '̿'\\̵͇̿̿\\з=( ͠° ͟ʖ ͡°)=ε/̵͇̿̿/'̿̿ ̿ ̿ ̿ ̿ ̿</div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    PasswordRecoveryFormikErrorType,\r\n    PasswordRecoveryResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useFormik} from \"formik\";\r\nimport c from \"./PasswordRecovery.module.scss\";\r\nimport {recoverPassword} from \"../../../bll/thunks/thunks\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        error,\r\n        info\r\n    } = useSelector<RootStateType, PasswordRecoveryResponseType>(\r\n        state => state.passwordRecovery\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: PasswordRecoveryFormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(recoverPassword(values.email));\r\n        }\r\n    });\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError] = [\r\n        formik.touched.email && formik.errors.email\r\n    ];\r\n\r\n    if (info && !error) {\r\n        return <Redirect to={PATH.ENTER_NEW_PASSWORD}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.pasRecContainer}>\r\n            <h2>Forgot your password?</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Enter your email address and we will send you further\r\n                    instructions\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                </label>\r\n                {\r\n                    emailError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.email}</div>\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <button disabled={isButtonDisabled} type={'submit'}>\r\n                        Send instructions\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const EnterNewPassword = () => {\r\n    return (\r\n        <div>\r\n            Enter New Password\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Input} from '../Input/Input';\r\nimport './EditableSpan.css';\r\n\r\n\r\ntype EditableSpanType = {\r\n    error?: string\r\n}\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = (\r\n    {\r\n        children\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const onBlurCallback = () => {\r\n        setEditMode(false)\r\n    }\r\n    const onDoubleClickHandler = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*{editMode*/}\r\n            {/*    ? <Input*/}\r\n            {/*        onBlur={onBlurCallback}*/}\r\n            {/*    />*/}\r\n            {/*    : <span onDoubleClick={onDoubleClickHandler}>*/}\r\n            {/*            {children}*/}\r\n            {/*        </span>*/}\r\n            {/*}*/}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Select as SelectFromAnt} from 'antd';\r\n\r\n\r\nconst {Option} = SelectFromAnt;\r\n\r\ntype SuperSelectPropsType = {\r\n    options: string[]\r\n}\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options.map((option, index) =>\r\n        <Option key={index}\r\n                value={option}>\r\n            {option}\r\n        </Option>\r\n    );\r\n\r\n    return (\r\n        <SelectFromAnt defaultValue={options[0]}>\r\n            {mappedOptions}\r\n        </SelectFromAnt>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Radio as RadioFromAnt, RadioChangeEvent} from 'antd';\r\n\r\n\r\ntype SuperRadioPropsType = {\r\n    options: string[]\r\n}\r\n\r\nexport const Radio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        options\r\n    }\r\n) => {\r\n    const [value, setValue] = React.useState(1);\r\n\r\n    const mappedOptions: JSX.Element[] = options\r\n        ? options.map((option, index) => (\r\n            <RadioFromAnt key={index}\r\n                          value={index + 1}>\r\n                {option}\r\n            </RadioFromAnt>\r\n        ))\r\n        : [];\r\n\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <RadioFromAnt.Group onChange={onChange}\r\n                            value={value}>\r\n            {mappedOptions}\r\n        </RadioFromAnt.Group>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Range.css';\r\nimport {Slider} from \"antd\";\r\n\r\n\r\ntype RangePropsType = {\r\n    defaultValue: number\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = (\r\n    {\r\n        defaultValue\r\n    }\r\n) => {\r\n    return (\r\n        <Slider\r\n            defaultValue={defaultValue}\r\n            style={{width: 300}}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Slider} from \"antd\";\r\nimport './DoubleRange.css';\r\n\r\ntype DoubleRangePropsType = {\r\n    defaultValues: [number, number]\r\n};\r\n\r\nexport const DoubleRange: React.FC<DoubleRangePropsType> = (\r\n    {\r\n        defaultValues\r\n    }\r\n) => {\r\n    return (\r\n        <Slider\r\n            range\r\n            defaultValue={defaultValues}\r\n            style={{width: 300}}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport c from './Test.module.scss';\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Select} from \"../../common/Select/Select\";\r\nimport {Radio} from \"../../common/Radio/Radio\";\r\nimport {Range} from \"../../common/Range/Range\";\r\nimport {DoubleRange} from \"../../common/DoubleRange/DoubleRange\";\r\n\r\n\r\nexport const Test = () => {\r\n    const names = ['Jack', 'Lucy', 'Bob'];\r\n\r\n    return (\r\n        <div className={c.test}>\r\n            <h4>\r\n                Input\r\n            </h4>\r\n            {/*<Input/>*/}\r\n            <h4>\r\n                Button\r\n            </h4>\r\n            {/*<Button>*/}\r\n            {/*    Click me!*/}\r\n            {/*</Button>*/}\r\n            <h4>\r\n                Checkbox\r\n            </h4>\r\n            {/*<Checkbox/>*/}\r\n            <h4>\r\n                Editable Span\r\n            </h4>\r\n            <EditableSpan>\r\n                Some text\r\n            </EditableSpan>\r\n            <h4>\r\n                Select\r\n            </h4>\r\n            <Select options={names}/>\r\n            <h4>\r\n                Radio\r\n            </h4>\r\n            <Radio options={names}/>\r\n            <h4>\r\n                Range\r\n            </h4>\r\n            <Range defaultValue={30}/>\r\n            <h4>\r\n                Double Range\r\n            </h4>\r\n            <DoubleRange defaultValues={[20, 50]}/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport c from \"./Paginator.module.scss\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    page: number\r\n    pageCount: number\r\n    itemsTotalCount: number\r\n    changePageCount: (pageCount: number) => void\r\n    changePage: (page: number) => void\r\n}\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo((\r\n    {\r\n        page,\r\n        pageCount,\r\n        itemsTotalCount,\r\n        changePageCount,\r\n        changePage,\r\n    }\r\n) => {\r\n    const pagesCount = Math.ceil(itemsTotalCount / pageCount);\r\n    const portionSize = 10;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const onPreviousClick = () => {\r\n        setPortionNumber(portionNumber - 1);\r\n    }\r\n    const onNextClick = () => {\r\n        setPortionNumber(portionNumber + 1);\r\n    }\r\n    const onChangePageCount = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        changePageCount(+e.target.value);\r\n    }\r\n\r\n    const pagesList = pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n        const onChangeCurrentPageHandler = () => {\r\n            changePage(p);\r\n        }\r\n\r\n        return (\r\n            <span\r\n                key={p}\r\n                className={page === p ? c.pageSelected : ''}\r\n                onClick={onChangeCurrentPageHandler}\r\n                style={{margin: '0 5px', cursor: 'pointer'}}\r\n            >\r\n                {p}\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={c.paginatorContainer}>\r\n            <button\r\n                onClick={onPreviousClick}\r\n                disabled={portionNumber <= 1}>\r\n                ◀\r\n            </button>\r\n            {pagesList}\r\n            <button\r\n                onClick={onNextClick}\r\n                disabled={portionCount <= portionNumber}>\r\n                ▶\r\n            </button>\r\n            <label>\r\n                <select\r\n                    name=\"countOfItems\"\r\n                    onChange={onChangePageCount}\r\n                    value={pageCount}\r\n                >\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"15\">15</option>\r\n                </select> Items per page\r\n            </label>\r\n        </div>\r\n    )\r\n});","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport c from \"./Packs.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {\r\n    addNewPack,\r\n    deletePack,\r\n    getPacks,\r\n    updatePack\r\n} from \"../../../bll/thunks/thunks\";\r\nimport {setRequestParams} from \"../../../bll/reducers/packsReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Spin} from \"antd\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\n\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacks());\r\n    }, []);\r\n\r\n    const {\r\n        cardPacks,\r\n        cardPacksTotalCount,\r\n        pageCount,\r\n        page\r\n    } = useSelector<RootStateType, GetPacksResponseType>(\r\n        state => state.packs.response\r\n    );\r\n    const sortPacks = useSelector<RootStateType, string | undefined>(\r\n        state => state.packs.request.sortPacks\r\n    );\r\n    const myId = useSelector<RootStateType, string | undefined>(\r\n        state => state.profile._id\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const params = useSelector<RootStateType, GetPacksRequestType>(\r\n        state => state.packs.request\r\n    );\r\n\r\n    const [packName, setPackName] = useState<string>('');\r\n\r\n    const onMyClick = () => {\r\n        dispatch(setRequestParams({...params, user_id: myId}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onAllClick = () => {\r\n        dispatch(setRequestParams({...params, user_id: undefined}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onAddNewPackClick = () => {\r\n        dispatch(addNewPack({cardsPack: {}}));\r\n    }\r\n    const onChangeInputSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.currentTarget.value);\r\n    }\r\n    const onSearchClick = () => {\r\n        dispatch(setRequestParams({...params, packName: packName}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onChangePageCount = (pageCount: number) => {\r\n        dispatch(setRequestParams({...params, pageCount}))\r\n        dispatch(getPacks());\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setRequestParams({...params, page}))\r\n        dispatch(getPacks());\r\n    }\r\n    const onSortUpByDate = () => {\r\n        dispatch(setRequestParams({...params, sortPacks: '0updated'}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onSortDownByDate = () => {\r\n        dispatch(setRequestParams({...params, sortPacks: '1updated'}));\r\n        dispatch(getPacks());\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={c.packsContainer}>\r\n            <div className={c.titleContainer}>\r\n                <h2>Packs list</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChangeInputSearch}\r\n                    value={params.packName}/>\r\n                <button onClick={onSearchClick}>Search</button>\r\n            </div>\r\n            <div className={c.bodyContainer}>\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onMyClick}>My</button>\r\n                    <button onClick={onAllClick}>All</button>\r\n                    <button onClick={onAddNewPackClick}>Add new pack\r\n                    </button>\r\n                </div>\r\n                <div className={c.tableContainer}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Cards</th>\r\n                            <th>\r\n                                Last Updated {\r\n                                sortPacks === '0updated'\r\n                                    ? <button onClick={onSortDownByDate}>▲</button>\r\n                                    : <button onClick={onSortUpByDate}>▼</button>\r\n                            }\r\n                            </th>\r\n                            <th>Created by</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {\r\n                            cardPacks.map(pack => {\r\n                                const onDeleteClick = () => {\r\n                                    dispatch(deletePack(pack._id));\r\n                                }\r\n                                const onEditClick = () => {\r\n                                    dispatch(updatePack({\r\n                                        cardsPack: {\r\n                                            ...cardPacks,\r\n                                            _id: pack._id,\r\n                                            name: 'no named pack'\r\n                                        }\r\n                                    }));\r\n                                }\r\n\r\n                                return <tr key={pack._id}>\r\n                                    <td>\r\n                                        <NavLink to={'/cards/' + pack._id + '/' + pack.name}>\r\n                                            {pack.name}\r\n                                        </NavLink>\r\n                                    </td>\r\n                                    <td>{pack.cardsCount}</td>\r\n                                    <td>{new Date(pack.updated).toLocaleDateString()}</td>\r\n                                    <td>{new Date(pack.created).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        {\r\n                                            pack.user_id === myId\r\n                                                ? <>\r\n                                                    <button\r\n                                                        onClick={onDeleteClick}>\r\n                                                        Delete\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={onEditClick}>\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button>\r\n                                                        Learn\r\n                                                    </button>\r\n                                                </>\r\n                                                : <button>\r\n                                                    Learn\r\n                                                </button>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }</tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className={c.footerContainer}>\r\n                <div className={c.paginationContainer}>\r\n                    <Paginator\r\n                        page={page}\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        changePageCount={onChangePageCount}\r\n                        changePage={onChangePage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport c from \"./Cards.module.scss\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {\r\n    addNewCard,\r\n    deleteCard,\r\n    getCards,\r\n    updateCard\r\n} from \"../../../bll/thunks/thunks\";\r\nimport {Spin} from \"antd\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {setRequestParams} from \"../../../bll/reducers/cardsReducer\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const {packId, packName} = useParams<{ packId: string, packName: string }>();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(packId));\r\n    }, []);\r\n\r\n\r\n    const {\r\n        cards,\r\n        cardsTotalCount,\r\n        pageCount,\r\n        page\r\n    } = useSelector<RootStateType, GetCardsResponseType>(\r\n        state => state.cards.response\r\n    );\r\n    const sortCards = useSelector<RootStateType, string | undefined>(\r\n        state => state.cards.request.sortCards\r\n    );\r\n    const myId = useSelector<RootStateType, string | undefined>(\r\n        state => state.profile._id\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const params = useSelector<RootStateType, GetCardsRequestType>(\r\n        state => state.cards.request\r\n    );\r\n\r\n    const [cardQuestion, setCardQuestion] = useState<string>('');\r\n\r\n    const onAddNewCardClick = () => {\r\n        dispatch(addNewCard({card: {cardsPack_id: packId}}));\r\n    }\r\n    const onChangeInputSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCardQuestion(e.currentTarget.value);\r\n    }\r\n    const onSearchClick = () => {\r\n        dispatch(setRequestParams({...params, cardQuestion: cardQuestion}));\r\n        dispatch(getCards(packId))\r\n    }\r\n    const onChangePageCount = (pageCount: number) => {\r\n        dispatch(setRequestParams({...params, pageCount}));\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setRequestParams({...params, page}))\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onSortUpByGrade = () => {\r\n        dispatch(setRequestParams({...params, sortCards: '0grade'}));\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onSortDownByGrade = () => {\r\n        dispatch(setRequestParams({...params, sortCards: '1grade'}));\r\n        dispatch(getCards(packId));\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={c.cardsContainer}>\r\n            <div className={c.titleContainer}>\r\n                <h2>{packName}</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChangeInputSearch}\r\n                    value={params.cardQuestion}/>\r\n                <button onClick={onSearchClick}>Search</button>\r\n            </div>\r\n            <div className={c.bodyContainer}>\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onAddNewCardClick}>Add new card</button>\r\n                </div>\r\n                <div className={c.tableContainer}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Question</th>\r\n                            <th>Answer</th>\r\n                            <th>Last Updated</th>\r\n                            <th>\r\n                                Grade {\r\n                                sortCards === '0grade'\r\n                                    ? <button\r\n                                        onClick={onSortDownByGrade}>▲</button>\r\n                                    :\r\n                                    <button onClick={onSortUpByGrade}>▼</button>\r\n                            }\r\n                            </th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {\r\n                            cards.map(card => {\r\n                                const onDeleteClick = () => {\r\n                                    dispatch(deleteCard(card._id, card.cardsPack_id));\r\n                                }\r\n                                const onEditClick = () => {\r\n                                    dispatch(updateCard({\r\n                                        card: {\r\n                                            ...cards,\r\n                                            cardsPack_id: card.cardsPack_id,\r\n                                            _id: card._id,\r\n                                            question: 'How are you?'\r\n                                        }\r\n                                    }));\r\n                                }\r\n\r\n                                return <tr key={card._id}>\r\n                                    <td>{card.question}</td>\r\n                                    <td>{card.answer}</td>\r\n                                    <td>{new Date(card.updated).toLocaleDateString()}</td>\r\n                                    <td>{card.grade}</td>\r\n                                    <td>\r\n                                        {\r\n                                            card.user_id === myId\r\n                                                ? <>\r\n                                                    <button onClick={onDeleteClick}>\r\n                                                        Delete\r\n                                                    </button>\r\n                                                    <button onClick={onEditClick}>\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button>\r\n                                                        Learn\r\n                                                    </button>\r\n                                                </>\r\n                                                : <button>\r\n                                                    Learn\r\n                                                </button>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className={c.footerContainer}>\r\n                <div className={c.paginationContainer}>\r\n                    <Paginator\r\n                        page={page}\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardsTotalCount}\r\n                        changePageCount={onChangePageCount}\r\n                        changePage={onChangePage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./login/Login\";\r\nimport {Registration} from \"./registration/Registration\";\r\nimport {Profile} from \"./profile/Profile\";\r\nimport {Error404} from \"./error-404/Error404\";\r\nimport {PasswordRecovery} from \"./password-recovery/PasswordRecovery\";\r\nimport {EnterNewPassword} from \"./enter-new-password/EnterNewPassword\";\r\nimport React from \"react\";\r\nimport {Test} from \"./test/Test\";\r\nimport {Packs} from \"./packs/Packs\";\r\nimport {Cards} from \"./cards/Cards\";\r\n\r\n\r\nexport const PATH = {\r\n    TEST: '/test',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/password_recovery',\r\n    ENTER_NEW_PASSWORD: '/enter_new_password',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:packId/:packName'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport c from './Header.module.scss';\r\nimport {PATH} from \"../pages/Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../common/Button/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logOut} from \"../../bll/thunks/thunks\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n    isLogged: boolean\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (\r\n    {\r\n        isLogged\r\n    }\r\n) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOutClickHandler = () => {\r\n        dispatch(logOut());\r\n    }\r\n\r\n    return (\r\n        <div className={c.navbar}>\r\n            <NavLink to={PATH.TEST}\r\n                     activeClassName={c.active}>Test</NavLink>\r\n            <NavLink to={PATH.LOGIN}\r\n                     activeClassName={c.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}\r\n                     activeClassName={c.active}>Registration</NavLink>\r\n            <NavLink to={PATH.PROFILE}\r\n                     activeClassName={c.active}>Profile</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}\r\n                     activeClassName={c.active}>Password\r\n                Recovery</NavLink>\r\n            <NavLink to={PATH.ENTER_NEW_PASSWORD}\r\n                     activeClassName={c.active}>Enter new\r\n                password</NavLink>\r\n            <NavLink to={PATH.PACKS}\r\n                     activeClassName={c.active}>Packs</NavLink>\r\n            <NavLink to={PATH.CARDS}\r\n                     activeClassName={c.active}>Cards</NavLink>\r\n            {\r\n                isLogged\r\n                && <NavLink to={PATH.LOGIN}\r\n                            onClick={onLogOutClickHandler}\r\n                            style={{position: 'absolute', right: 0}}\r\n                            activeClassName={c.active}>Log Out\r\n                </NavLink>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport './App.module.scss';\nimport {Header} from \"./components/Header/Header\";\nimport {Routes} from \"./components/pages/Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAppInitialize} from \"./bll/thunks/thunks\";\nimport {AppStateType, RootStateType} from \"./types/types\";\nimport {Spin} from \"antd\";\n\n\nfunction App() {\n    const {isInitialized} = useSelector<RootStateType, AppStateType>(\n        state => state.app\n    );\n    const isLogged = useSelector<RootStateType, boolean>(\n        state => state.login.isLogged\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setAppInitialize());\n    }, []);\n\n    if (!isInitialized) {\n        return <div style={{\n            position: 'fixed',\n            width: '100%',\n            top: '30%',\n            textAlign: 'center'\n        }}>\n            <Spin size={'large'}/>\n        </div>\n    }\n\n    return (\n        <div className=\"App\">\n            <Header isLogged={isLogged}/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\n\r\nexport const enterNewPasswordReducer = (state: any = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {enterNewPasswordReducer} from \"./reducers/enterNewPasswordReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {passwordRecoveryReducer} from \"./reducers/passwordRecoveryReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\nimport {packsReducer} from \"./reducers/packsReducer\";\r\nimport {cardsReducer} from \"./reducers/cardsReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    enterNewPassword: enterNewPasswordReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n});\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__VOz3e\",\"active\":\"Header_active__3b-fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__1j9X8\",\"titleContainer\":\"Packs_titleContainer__12q41\",\"bodyContainer\":\"Packs_bodyContainer__v2LNg\",\"tableContainer\":\"Packs_tableContainer__3i6cR\",\"footerContainer\":\"Packs_footerContainer__2xAX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"Cards_cardsContainer__1YYxp\",\"titleContainer\":\"Cards_titleContainer__1x5w-\",\"bodyContainer\":\"Cards_bodyContainer__1LDTe\",\"tableContainer\":\"Cards_tableContainer__2DEgA\",\"footerContainer\":\"Cards_footerContainer__2A75k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2jRvF\",\"e404\":\"Error404_e404__1XAnU\",\"title\":\"Error404_title__-3RXk\",\"pic\":\"Error404_pic__3XQTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPageContainer\":\"Login_loginPageContainer__2BTAz\",\"buttonContainer\":\"Login_buttonContainer__2LDQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__vXl9z\",\"buttonContainer\":\"Registration_buttonContainer__1O8qL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pasRecContainer\":\"PasswordRecovery_pasRecContainer__2yQ5Y\",\"buttonContainer\":\"PasswordRecovery_buttonContainer__1SO37\"};"],"sourceRoot":""}