{"version":3,"sources":["components/pages/password-recovery/PasswordRecovery.module.scss","components/common/Paginator/Paginator.module.scss","components/pages/test/Test.module.scss","components/common/Modal/input/ModalInput.module.scss","components/common/Modal/question/ModalQuestion.module.scss","components/pages/learn-page/LearnPage.module.scss","bll/reducers/loginReducer.ts","api/api.ts","bll/reducers/registrationReducer.ts","bll/reducers/passwordRecoveryReducer.ts","bll/reducers/appReducer.ts","bll/reducers/profileReducer.ts","bll/reducers/packsReducer.ts","bll/reducers/cardsReducer.ts","bll/thunks/thunks.ts","components/pages/login/Login.tsx","components/pages/registration/Registration.tsx","components/pages/profile/Profile.tsx","components/pages/error-404/Error404.tsx","components/pages/password-recovery/PasswordRecovery.tsx","components/pages/enter-new-password/EnterNewPassword.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/Select/Select.tsx","components/common/Radio/Radio.tsx","components/common/Range/Range.tsx","components/common/DoubleRange/DoubleRange.tsx","components/pages/test/Test.tsx","components/pages/packs/pack/Pack.tsx","components/common/Modal/input/InputMap.tsx","components/common/Modal/Modal.tsx","components/common/Modal/input/ModalInput.tsx","components/common/Modal/question/ModalQuestion.tsx","components/common/Paginator/Paginator.tsx","components/pages/packs/Packs.tsx","components/pages/cards/card/Card.tsx","components/pages/cards/Cards.tsx","components/common/Modal/ModalContainer.tsx","components/common/Modal/input/ModalInputContainer.tsx","components/common/Modal/message/ModalMessage.tsx","components/common/Modal/message/ModalMessageContainer.tsx","components/common/Modal/message/ModalMessageStack.tsx","components/common/Modal/message/ModalMessageStackContainer.tsx","components/common/Modal/question/ModalQuestionContainer.tsx","components/common/Modal/up/ModalUp.tsx","components/pages/modals/ModalsPage.tsx","components/pages/learn-page/LearnPage.tsx","components/pages/Routes.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","bll/reducers/enterNewPasswordReducer.ts","bll/store.ts","index.tsx","components/Header/Header.module.scss","components/pages/packs/Packs.module.scss","components/pages/cards/Cards.module.scss","components/pages/error-404/Error404.module.scss","components/pages/login/Login.module.scss","components/pages/registration/Registration.module.scss"],"names":["module","exports","loginSlice","createSlice","name","initialState","isLogged","reducers","setLogged","state","action","payload","loginReducer","reducer","actions","axiosInst","axios","create","baseURL","withCredentials","authAPI","me","a","post","response","data","logIn","loginData","logOut","delete","register","registerData","recoverPassword","email","from","message","packsAPI","getPacks","paramsPayload","get","params","addNewPack","cardsPack","deletePack","cardsPackId","id","updatePack","put","cardsAPI","getCards","addNewCard","card","deleteCard","cardId","updateCard","learnAPI","changeGrade","grade","registrationSlice","error","isRegistered","setRegisterError","registrationReducer","pasRecSlice","info","setPasRecover","passwordRecoveryReducer","appSlice","isLoading","isInitialized","setLoading","setAppError","setAppInitialized","appReducer","_id","avatar","publicCardPacksCount","created","undefined","updated","isAdmin","verified","rememberMe","profileSlice","setProfileData","profileReducer","request","packName","min","max","sortPacks","page","pageCount","user_id","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","packsSlice","setRequestParams","setCardPacks","packsReducer","cardsPack_id","cardAnswer","cardQuestion","sortCards","cards","cardsTotalCount","maxGrade","minGrade","packUserId","cardsSlice","setCards","cardsReducer","dispatch","getState","packs","console","log","Login","useState","isButtonDisabled","setButtonDisabled","useDispatch","useSelector","login","app","useEffect","formik","useFormik","initialValues","password","validate","values","errors","test","onSubmit","errorStyle","border","outlined","emailError","touched","passwordError","style","position","width","top","textAlign","size","to","PATH","PROFILE","className","c","loginPageContainer","handleSubmit","type","getFieldProps","color","buttonContainer","disabled","Registration","history","useHistory","registration","confirmPassword","registrationData","confirmPasswordError","LOGIN","registrationContainer","onClick","push","Profile","profile","profileContainer","src","alt","userId","Error404","e404","title","pic","PasswordRecovery","passwordRecovery","ENTER_NEW_PASSWORD","pasRecContainer","EnterNewPassword","EditableSpan","children","Option","SelectFromAnt","Select","options","mappedOptions","map","option","index","value","defaultValue","Radio","React","setValue","Group","onChange","e","target","Range","DoubleRange","defaultValues","range","Test","names","Pack","myId","cardsCount","onDeleteClick","onEditClick","onLearnClick","InputMap","inputData","setSaveInputs","confirm","defAnswersData","useMemo","iD","i","modalInputData","setModalInputData","f","successCloseModal","length","pack","currentTarget","Modal","enableBackground","backgroundStyle","backgroundOnClick","height","modalStyle","modalOnClick","show","left","background","opacity","zIndex","display","flexFlow","alignItems","justifyContent","ModalInput","answer","setAnswer","button","close","answerData","setAnswerData","saveInputs","modalInputContainer","ModalQuestion","setTrue","setFalse","buttonTrue","buttonFalse","modalQuestionContainer","Paginator","memo","itemsTotalCount","changePageCount","changePage","pagesCount","Math","ceil","pages","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagesList","filter","p","pageSelected","margin","cursor","paginatorContainer","Packs","searchPack","setSearchPack","editMode","setEditMode","deleteMode","setDeleteMode","packId","setPackId","setPackName","packsContainer","titleContainer","bodyContainer","tableContainer","Date","toLocaleDateString","footerContainer","paginationContainer","Card","question","Cards","useParams","searchQuestion","setSearchQuestion","setCardId","setQuestion","cardsContainer","ModalContainer","setShow","ModalInputContainer","value1","setValue1","value2","setValue2","none","ModalMessage","startTop","endTop","time","speed","setTop","updateInnerEndTop","setUpdateInnerEndTop","innerTop","innerEndTop","timer","setInterval","setTimeout","clearInterval","timer2","ModalMessageContainer","ModalMessageStack","setAddNewModal","defEndTop","defMiddle","defHeight","modals","setModals","addModal","modal","newModals","mf","showClose","m","arr","reduce","acc","successModal","this","errorModal","ModalMessageStackContainer","addNewModal","ModalQuestionContainer","ModalUp","handleScroll","window","scrollY","addEventListener","step","lastState","innerTimer","scroll","ModalsPage","grades","getCard","sum","rand","random","res","newSum","LearnPage","isChecked","setIsChecked","first","setFirst","store","shots","rating","more_id","__v","setCard","setGrade","learnPageContainer","g","card_id","TEST","REGISTRATION","PASSWORD_RECOVERY","PACKS","CARDS","MODALS","LEARN","Routes","path","exact","render","Header","navbar","activeClassName","active","right","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","enterNewPassword","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1b3d03ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pasRecContainer\":\"PasswordRecovery_pasRecContainer__2yQ5Y\",\"buttonContainer\":\"PasswordRecovery_buttonContainer__1SO37\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageSelected\":\"Paginator_pageSelected__21e9X\",\"paginatorContainer\":\"Paginator_paginatorContainer__6TBRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__21i_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalInputContainer\":\"ModalInput_modalInputContainer__3T4WI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalQuestionContainer\":\"ModalQuestion_modalQuestionContainer__3lQL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnPageContainer\":\"LearnPage_learnPageContainer__1ZqQz\"};","import {LoginStateType} from \"../../types/types\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState: LoginStateType = {\r\n        isLogged: false\r\n};\r\n\r\nconst loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setLogged(state, action: PayloadAction<LoginStateType>) {\r\n            state.isLogged = action.payload.isLogged;\r\n        }\r\n    }\r\n})\r\n\r\nexport const loginReducer = loginSlice.reducer;\r\n\r\nexport const {setLogged} = loginSlice.actions;\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    LoginRequestType,\r\n    LogoutResponseType,\r\n    PasswordRecoveryRequestType,\r\n    PasswordRecoveryResponseType,\r\n    PostCardRequestType,\r\n    PostPackRequestType,\r\n    ProfileResponseType,\r\n    PutCardRequestType, PutGradeRequestType,\r\n    PutPackRequestType,\r\n    RegisterRequestType,\r\n    RegisterResponseType\r\n} from \"../types/types\";\r\n\r\n\r\nconst axiosInst = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n});\r\n\r\nexport const authAPI = {\r\n    me: async () => {\r\n        const response = await axiosInst\r\n            .post<{}, AxiosResponse<ProfileResponseType>>('auth/me', {});\r\n        return response.data;\r\n    },\r\n    logIn: async (loginData: LoginRequestType) => {\r\n        const response = await axiosInst\r\n            .post<LoginRequestType, AxiosResponse<ProfileResponseType>>(\r\n                'auth/login', {\r\n                    ...loginData\r\n                }\r\n            );\r\n        return response.data;\r\n    },\r\n    logOut: async () => {\r\n        const response = await axiosInst\r\n            .delete<LoginRequestType, AxiosResponse<LogoutResponseType>>(\r\n                'auth/me'\r\n            );\r\n        return response.data;\r\n    },\r\n    register: async (registerData: RegisterRequestType) => {\r\n        const response = await axiosInst\r\n            .post<RegisterRequestType, AxiosResponse<RegisterResponseType>>('auth/register', {\r\n                ...registerData\r\n            });\r\n        return response.data;\r\n    },\r\n    recoverPassword: async (email: string) => {\r\n        const response = await axiosInst\r\n            .post<PasswordRecoveryRequestType, AxiosResponse<PasswordRecoveryResponseType>>('auth/forgot', { // только через хероку\r\n                email,\r\n                from: 'test-front-admin <borisenk-anton@yandex.ru>',\r\n                message: `<div style=\"background-color: lime; padding: 15px\">\r\npassword recovery link: <a href='http://localhost:3000/friday_project#/password_recovery/$token$'>link</a>\r\n</div>`\r\n            });\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport const packsAPI = {\r\n    getPacks: async (paramsPayload: GetPacksRequestType) => {\r\n        const response = await axiosInst\r\n            .get<GetPacksRequestType, AxiosResponse<GetPacksResponseType>>('cards/pack', {\r\n                params: {\r\n                    ...paramsPayload\r\n                }\r\n            });\r\n        return response.data;\r\n    },\r\n    addNewPack: async (cardsPack: PostPackRequestType) => {\r\n        await axiosInst\r\n            .post('cards/pack', cardsPack);\r\n    },\r\n    deletePack: async (cardsPackId: string) => {\r\n        await axiosInst\r\n            .delete('cards/pack', {\r\n                params: {\r\n                    id: cardsPackId\r\n                }\r\n            });\r\n    },\r\n    updatePack: async (cardsPack: PutPackRequestType) => {\r\n        await axiosInst\r\n            .put('cards/pack', cardsPack);\r\n    },\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards: async (paramsPayload: GetCardsRequestType) => {\r\n        const response = await axiosInst\r\n            .get<GetCardsRequestType, AxiosResponse<GetCardsResponseType>>('cards/card', {\r\n                params: {\r\n                    ...paramsPayload\r\n                }\r\n            });\r\n        return response.data;\r\n    },\r\n    addNewCard: async (card: PostCardRequestType) => {\r\n        await axiosInst\r\n            .post('cards/card', card);\r\n    },\r\n    deleteCard: async (cardId: string) => {\r\n        await axiosInst\r\n            .delete('cards/card', {\r\n                params: {\r\n                    id: cardId\r\n                }\r\n            });\r\n    },\r\n    updateCard: async (card: PutCardRequestType) => {\r\n        await axiosInst\r\n            .put('cards/card', card);\r\n    },\r\n}\r\n\r\nexport const learnAPI = {\r\n    changeGrade: async (grade: PutGradeRequestType) => {\r\n        await axiosInst\r\n            .put('cards/grade', grade);\r\n    }\r\n}\r\n","import {RegisterResponseType} from \"../../types/types\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState: RegisterResponseType = {\r\n    error: '',\r\n    isRegistered: false\r\n}\r\n\r\nconst registrationSlice = createSlice({\r\n    name: 'registration',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRegisterError(state, action: PayloadAction<RegisterResponseType>){\r\n            state.error = action.payload.error;\r\n            state.isRegistered = action.payload.isRegistered;\r\n        }\r\n    }\r\n});\r\n\r\nexport const registrationReducer = registrationSlice.reducer;\r\n\r\nexport const {setRegisterError} = registrationSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {PasswordRecoveryResponseType} from \"../../types/types\";\r\n\r\n\r\nconst initialState: PasswordRecoveryResponseType = {\r\n    error: '',\r\n    info: ''\r\n}\r\n\r\nconst pasRecSlice = createSlice({\r\n    name: 'passwordRecovery',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setPasRecover(state, action: PayloadAction<PasswordRecoveryResponseType>){\r\n            state.error = action.payload.error\r\n            state.info = action.payload.info\r\n        }\r\n    }\r\n})\r\n\r\nexport const passwordRecoveryReducer = pasRecSlice.reducer;\r\n\r\nexport const {setPasRecover} = pasRecSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {AppStateType, Nullable} from \"../../types/types\";\r\n\r\n\r\nconst initialState: AppStateType = {\r\n    isLoading: false,\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setLoading(state, action: PayloadAction<{isLoading: boolean}>){\r\n            state.isLoading = action.payload.isLoading;\r\n        },\r\n        setAppError(state, action: PayloadAction<{error: Nullable<string>}>){\r\n            state.error = action.payload.error;\r\n        },\r\n        setAppInitialized(state, action: PayloadAction<{isInitialized: boolean}>){\r\n            state.isInitialized = action.payload.isInitialized;\r\n        }\r\n    }\r\n});\r\n\r\nexport const appReducer = appSlice.reducer;\r\n\r\nexport const {setLoading, setAppError, setAppInitialized} = appSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {ProfileResponseType} from \"../../types/types\";\r\n\r\nconst initialState: ProfileResponseType = {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: undefined,\r\n        updated: undefined,\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n        error: ''\r\n}\r\n\r\nconst profileSlice = createSlice({\r\n    name: 'profile',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setProfileData(state, action: PayloadAction<ProfileResponseType>) {\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const profileReducer = profileSlice.reducer;\r\n\r\nexport const {setProfileData} = profileSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    GetPacksStateType\r\n} from \"../../types/types\";\r\n\r\n\r\nconst initialState: GetPacksStateType = {\r\n    request: {\r\n        packName: undefined,\r\n        min: undefined,\r\n        max: undefined,\r\n        sortPacks: '0updated',\r\n        page: 1,\r\n        pageCount: 5,\r\n        user_id: undefined,\r\n    },\r\n    response: {\r\n        cardPacks: [],\r\n        cardPacksTotalCount: 0,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        page: 1,\r\n        pageCount: 5,\r\n    }\r\n}\r\n\r\nconst packsSlice = createSlice({\r\n    name: 'packs',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRequestParams(state, action: PayloadAction<GetPacksRequestType>){\r\n            state.request = action.payload;\r\n        },\r\n        setCardPacks(state, action: PayloadAction<GetPacksResponseType>) {\r\n            state.response = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const packsReducer = packsSlice.reducer;\r\n\r\nexport const {setCardPacks, setRequestParams} = packsSlice.actions;\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    GetCardsStateType\r\n} from \"../../types/types\";\r\n\r\n\r\nconst initialState: GetCardsStateType = {\r\n    request: {\r\n        cardsPack_id: '',\r\n        cardAnswer: undefined,\r\n        cardQuestion: undefined,\r\n        min: undefined,\r\n        max: undefined,\r\n        sortCards: '0grade',\r\n        page: 1,\r\n        pageCount: 5,\r\n    },\r\n    response: {\r\n        cards: [],\r\n        cardsTotalCount: 0,\r\n        maxGrade: 0,\r\n        minGrade: 0,\r\n        page: 1,\r\n        pageCount: 5,\r\n        packUserId: \"\"\r\n    }\r\n}\r\n\r\nconst cardsSlice = createSlice({\r\n    name: 'cards',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRequestParams(state, action: PayloadAction<GetCardsRequestType>){\r\n            state.request = action.payload;\r\n        },\r\n        setCards(state, action: PayloadAction<GetCardsResponseType>) {\r\n            state.response = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const cardsReducer = cardsSlice.reducer;\r\n\r\nexport const {setCards, setRequestParams} = cardsSlice.actions;\r\n","import {Dispatch} from \"redux\";\r\nimport {setLogged} from \"../reducers/loginReducer\";\r\nimport {authAPI, cardsAPI, learnAPI, packsAPI} from \"../../api/api\";\r\nimport {\r\n    CardType,\r\n    LoginRequestType, PostCardRequestType,\r\n    PostPackRequestType, PutCardRequestType, PutGradeRequestType,\r\n    PutPackRequestType,\r\n    RegisterRequestType\r\n} from \"../../types/types\";\r\nimport {setRegisterError} from \"../reducers/registrationReducer\";\r\nimport {setPasRecover} from \"../reducers/passwordRecoveryReducer\";\r\nimport {setAppInitialized, setLoading} from \"../reducers/appReducer\";\r\nimport {setProfileData} from \"../reducers/profileReducer\";\r\nimport {setCardPacks} from \"../reducers/packsReducer\";\r\nimport {setCards} from \"../reducers/cardsReducer\";\r\n\r\n\r\nexport const logIn = (loginData: LoginRequestType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.logIn(loginData);\r\n        dispatch(setProfileData(response));\r\n        dispatch(setLogged({isLogged: true}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await authAPI.logOut();\r\n        dispatch(setLogged({isLogged: false}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const register = (registrationData: RegisterRequestType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.register(registrationData);\r\n        response && dispatch(setRegisterError({\r\n            isRegistered: true,\r\n            error: response.error\r\n        }));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const recoverPassword = (email: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.recoverPassword(email);\r\n        response && dispatch(setPasRecover({...response}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const setAppInitialize = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await authAPI.me();\r\n        dispatch(setProfileData(response));\r\n        dispatch(setLogged({isLogged: true}));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n        dispatch(setAppInitialized({isInitialized: true}));\r\n    }\r\n}\r\n\r\nexport const getPacks = () => async (dispatch: Dispatch, getState: Function) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await packsAPI.getPacks(getState().packs.request);\r\n        response && dispatch(setCardPacks(response));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const addNewPack = (cardsPack: PostPackRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.addNewPack(cardsPack);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const deletePack = (cardsPackId: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.deletePack(cardsPackId);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const updatePack = (cardsPack: PutPackRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await packsAPI.updatePack(cardsPack);\r\n        dispatch(getPacks());\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const getCards = (cardsPackId: string) => async (dispatch: Dispatch<any>, getState: Function) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        const response = await cardsAPI.getCards({...getState().cards.request, cardsPack_id: cardsPackId});\r\n        response && dispatch(setCards(response));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const addNewCard = (card: PostCardRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.addNewCard(card);\r\n        dispatch(getCards(card.card.cardsPack_id));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string, cardsPackId: string) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.deleteCard(cardId);\r\n        dispatch(getCards(cardsPackId));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const updateCard = (card: PutCardRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await cardsAPI.updateCard(card);\r\n        dispatch(getCards(card.card.cardsPack_id));\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n\r\nexport const changeGrade = (grade: PutGradeRequestType) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        dispatch(setLoading({isLoading: true}));\r\n        await learnAPI.changeGrade(grade);\r\n    } catch (e: any) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error);\r\n        console.log('Error: ', {...e});\r\n    } finally {\r\n        dispatch(setLoading({isLoading: false}));\r\n    }\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport c from \"./Login.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logIn} from \"../../../bll/thunks/thunks\";\r\nimport {\r\n    LoginFormikErrorType,\r\n    LoginRequestType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Spin} from \"antd\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\nexport const Login = () => {\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const isLogged = useSelector<RootStateType, boolean>(\r\n        state => state.login.isLogged\r\n    )\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values: LoginRequestType) => {\r\n            const errors: LoginFormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{3,}$/.test(values.password)) {\r\n                errors.password = 'Invalid password';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            setButtonDisabled(true);\r\n            dispatch(logIn(values));\r\n        },\r\n    });\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError, passwordError] = [\r\n        formik.touched.email && formik.errors.email,\r\n        formik.touched.password && formik.errors.password\r\n    ];\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.loginPageContainer}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        id='email'\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}/>\r\n                </label>\r\n                {\r\n                    formik.touched.email && formik.errors.email\r\n                        ? (\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>)\r\n                        : null\r\n                }\r\n                <label>\r\n                    Password\r\n                    <input\r\n                        id={'password'}\r\n                        type=\"password\"\r\n                        style={passwordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                </label>\r\n                {\r\n                    formik.touched.password && formik.errors.password\r\n                        ? (<div\r\n                            style={{color: 'red'}}>{formik.errors.password}</div>)\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <label>\r\n                        Remember me\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id={'rememberMe'}\r\n                            {...formik.getFieldProps('')}/>\r\n                    </label>\r\n                    <button type={'submit'} disabled={isButtonDisabled}>\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    RegisterFormikErrorType,\r\n    RegisterResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {useFormik} from \"formik\";\r\nimport c from \"./Registration.module.scss\";\r\nimport {Spin} from \"antd\";\r\nimport {register} from \"../../../bll/thunks/thunks\";\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const {\r\n        error,\r\n        isRegistered\r\n    } = useSelector<RootStateType, RegisterResponseType>(\r\n        state => state.registration\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik(\r\n        {\r\n            initialValues: {\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            validate: (values) => {\r\n                const errors: RegisterFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = 'Required';\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n\r\n                if (!values.password) {\r\n                    errors.password = 'Required';\r\n                } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{3,}$/.test(values.password)) {\r\n                    errors.password = 'Invalid password';\r\n                }\r\n\r\n                if (!values.confirmPassword) {\r\n                    errors.confirmPassword = 'Required';\r\n                } else if (values.confirmPassword !== values.password) {\r\n                    errors.confirmPassword = 'Incorrect confirmation';\r\n                }\r\n\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                setButtonDisabled(true);\r\n                dispatch(register({...values}));\r\n            }\r\n        }\r\n    );\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError, passwordError, confirmPasswordError] = [\r\n        formik.touched.email && formik.errors.email,\r\n        formik.touched.password && formik.errors.password,\r\n        formik.touched.confirmPassword && formik.errors.confirmPassword\r\n    ];\r\n\r\n    const onCancelClick = () => {\r\n        history.push(PATH.LOGIN);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={'large'}/>\r\n        </div>\r\n    }\r\n\r\n    if ((isRegistered && !error)) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.registrationContainer}>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        id='email'\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                </label>\r\n                {\r\n                    emailError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.email}</div>\r\n                        : null\r\n                }\r\n                <label>\r\n                    Password\r\n                    <input\r\n                        id='password'\r\n                        type=\"password\"\r\n                        style={passwordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                </label>\r\n                {\r\n                    passwordError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.password}</div>\r\n                        : null\r\n                }\r\n                <label>\r\n                    Confirm password\r\n                    <input\r\n                        id='confirmPassword'\r\n                        type=\"password\"\r\n                        style={confirmPasswordError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('confirmPassword')}\r\n                    />\r\n                </label>\r\n                {\r\n                    confirmPasswordError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.confirmPassword}</div>\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onCancelClick}>\r\n                        Cancel\r\n                    </button>\r\n                    <button type='submit' disabled={isButtonDisabled}>\r\n                        Register\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {ProfileResponseType, RootStateType} from \"../../../types/types\";\r\nimport c from \"./Profile.module.scss\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const {avatar, name, _id} = useSelector<RootStateType, ProfileResponseType>(state => state.profile);\r\n    const isLogged = useSelector<RootStateType, boolean>(\r\n        state => state.login.isLogged\r\n    )\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div className={c.profileContainer}>\r\n            <img src={avatar} alt=\"ava\"/>\r\n            <div className={c.name}>\r\n                <b>Name</b>: {name}\r\n            </div>\r\n            <div className={c.userId}>\r\n                <b>My ID</b>: {_id}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport c from './Error404.module.scss';\r\n\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={c.error}>\r\n            <div className={c.e404}>404</div>\r\n            <div className={c.title}>Page not found!</div>\r\n            <div className={c.pic}>̿ ̿ ̿ ̿ '̿'\\̵͇̿̿\\з=( ͠° ͟ʖ ͡°)=ε/̵͇̿̿/'̿̿ ̿ ̿ ̿ ̿ ̿</div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    PasswordRecoveryFormikErrorType,\r\n    PasswordRecoveryResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useFormik} from \"formik\";\r\nimport c from \"./PasswordRecovery.module.scss\";\r\nimport {recoverPassword} from \"../../../bll/thunks/thunks\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [isButtonDisabled, setButtonDisabled] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        error,\r\n        info\r\n    } = useSelector<RootStateType, PasswordRecoveryResponseType>(\r\n        state => state.passwordRecovery\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setButtonDisabled(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: PasswordRecoveryFormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(recoverPassword(values.email));\r\n        }\r\n    });\r\n\r\n    const errorStyle = {\r\n        border: '1px solid red',\r\n        outlined: false\r\n    }\r\n\r\n    const [emailError] = [\r\n        formik.touched.email && formik.errors.email\r\n    ];\r\n\r\n    if (info && !error) {\r\n        return <Redirect to={PATH.ENTER_NEW_PASSWORD}/>\r\n    }\r\n\r\n    return (\r\n        <div className={c.pasRecContainer}>\r\n            <h2>Forgot your password?</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label>\r\n                    Enter your email address and we will send you further\r\n                    instructions\r\n                    <input\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        style={emailError ? errorStyle : undefined}\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                </label>\r\n                {\r\n                    emailError\r\n                        ? <div\r\n                            style={{color: 'red'}}>{formik.errors.email}</div>\r\n                        : null\r\n                }\r\n                <div className={c.buttonContainer}>\r\n                    <button disabled={isButtonDisabled} type={'submit'}>\r\n                        Send instructions\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const EnterNewPassword = () => {\r\n    return (\r\n        <div>\r\n            Enter New Password\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Input} from '../Input/Input';\r\nimport './EditableSpan.css';\r\n\r\n\r\ntype EditableSpanType = {\r\n    error?: string\r\n}\r\n\r\nexport const EditableSpan: React.FC<EditableSpanType> = (\r\n    {\r\n        children\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const onBlurCallback = () => {\r\n        setEditMode(false)\r\n    }\r\n    const onDoubleClickHandler = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*{editMode*/}\r\n            {/*    ? <Input*/}\r\n            {/*        onBlur={onBlurCallback}*/}\r\n            {/*    />*/}\r\n            {/*    : <span onDoubleClick={onDoubleClickHandler}>*/}\r\n            {/*            {children}*/}\r\n            {/*        </span>*/}\r\n            {/*}*/}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Select as SelectFromAnt} from 'antd';\r\n\r\n\r\nconst {Option} = SelectFromAnt;\r\n\r\ntype SuperSelectPropsType = {\r\n    options: string[]\r\n}\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options.map((option, index) =>\r\n        <Option key={index}\r\n                value={option}>\r\n            {option}\r\n        </Option>\r\n    );\r\n\r\n    return (\r\n        <SelectFromAnt defaultValue={options[0]}>\r\n            {mappedOptions}\r\n        </SelectFromAnt>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Radio as RadioFromAnt, RadioChangeEvent} from 'antd';\r\n\r\n\r\ntype SuperRadioPropsType = {\r\n    options: string[]\r\n}\r\n\r\nexport const Radio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        options\r\n    }\r\n) => {\r\n    const [value, setValue] = React.useState(1);\r\n\r\n    const mappedOptions: JSX.Element[] = options\r\n        ? options.map((option, index) => (\r\n            <RadioFromAnt key={index}\r\n                          value={index + 1}>\r\n                {option}\r\n            </RadioFromAnt>\r\n        ))\r\n        : [];\r\n\r\n    const onChange = (e: RadioChangeEvent) => {\r\n        console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <RadioFromAnt.Group onChange={onChange}\r\n                            value={value}>\r\n            {mappedOptions}\r\n        </RadioFromAnt.Group>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Range.css';\r\nimport {Slider} from \"antd\";\r\n\r\n\r\ntype RangePropsType = {\r\n    defaultValue: number\r\n};\r\n\r\nexport const Range: React.FC<RangePropsType> = (\r\n    {\r\n        defaultValue\r\n    }\r\n) => {\r\n    return (\r\n        <Slider\r\n            defaultValue={defaultValue}\r\n            style={{width: 300}}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Slider} from \"antd\";\r\nimport './DoubleRange.css';\r\n\r\ntype DoubleRangePropsType = {\r\n    defaultValues: [number, number]\r\n};\r\n\r\nexport const DoubleRange: React.FC<DoubleRangePropsType> = (\r\n    {\r\n        defaultValues\r\n    }\r\n) => {\r\n    return (\r\n        <Slider\r\n            range\r\n            defaultValue={defaultValues}\r\n            style={{width: 300}}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport c from './Test.module.scss';\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Select} from \"../../common/Select/Select\";\r\nimport {Radio} from \"../../common/Radio/Radio\";\r\nimport {Range} from \"../../common/Range/Range\";\r\nimport {DoubleRange} from \"../../common/DoubleRange/DoubleRange\";\r\n\r\n\r\nexport const Test = () => {\r\n    const names = ['Jack', 'Lucy', 'Bob'];\r\n\r\n    return (\r\n        <div className={c.test}>\r\n            <h4>\r\n                Input\r\n            </h4>\r\n            {/*<Input/>*/}\r\n            <h4>\r\n                Button\r\n            </h4>\r\n            {/*<Button>*/}\r\n            {/*    Click me!*/}\r\n            {/*</Button>*/}\r\n            <h4>\r\n                Checkbox\r\n            </h4>\r\n            {/*<Checkbox/>*/}\r\n            <h4>\r\n                Editable Span\r\n            </h4>\r\n            <EditableSpan>\r\n                Some text\r\n            </EditableSpan>\r\n            <h4>\r\n                Select\r\n            </h4>\r\n            <Select options={names}/>\r\n            <h4>\r\n                Radio\r\n            </h4>\r\n            <Radio options={names}/>\r\n            <h4>\r\n                Range\r\n            </h4>\r\n            <Range defaultValue={30}/>\r\n            <h4>\r\n                Double Range\r\n            </h4>\r\n            <DoubleRange defaultValues={[20, 50]}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PackPropsType = {\r\n    _id: string\r\n    user_id: string\r\n    myId?: string\r\n    name: string\r\n    cardsCount: number\r\n    updated: string\r\n    created: string\r\n    onDeleteClick: () => void\r\n    onEditClick: () => void\r\n    onLearnClick: () => void\r\n}\r\nexport const Pack: React.FC<PackPropsType> = (\r\n    {\r\n        user_id,\r\n        _id,\r\n        myId,\r\n        name,\r\n        cardsCount,\r\n        updated,\r\n        created,\r\n        onDeleteClick,\r\n        onEditClick,\r\n        onLearnClick\r\n    }\r\n) => {\r\n    return (\r\n        <tr key={_id}>\r\n            <td>\r\n                <NavLink to={'/cards/' + _id + '/' + name}>\r\n                    {name}\r\n                </NavLink>\r\n            </td>\r\n            <td>{cardsCount}</td>\r\n            <td>{updated}</td>\r\n            <td>{created}</td>\r\n            <td>\r\n                {\r\n                    user_id === myId\r\n                        ? <>\r\n                            <button\r\n                                onClick={onDeleteClick}>\r\n                                Delete\r\n                            </button>\r\n                            <button\r\n                                onClick={onEditClick}>\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                onClick={onLearnClick}>\r\n                                Learn\r\n                            </button>\r\n                        </>\r\n                        : <button\r\n                            onClick={onLearnClick}>\r\n                            Learn\r\n                        </button>\r\n                }\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {ConfirmFunctionType} from \"./ModalInput\";\r\n\r\n\r\nexport type InputData = [string, (value: string) => void];\r\n\r\ntype InputMapType = {\r\n    inputData?: InputData[];\r\n    setSaveInputs: (fObject: { f: () => void }) => void\r\n    confirm: ConfirmFunctionType\r\n}\r\n\r\nexport const InputMap: React.FC<InputMapType> = (\r\n    {\r\n        inputData,\r\n        setSaveInputs,\r\n        confirm\r\n    }\r\n) => {\r\n    const defAnswersData = useMemo(() => {\r\n        return inputData\r\n            ? inputData.map((iD, i) => ({\r\n                id: i,\r\n                value: iD[0],\r\n                setValue: iD[1]\r\n            }))\r\n            : [];\r\n    }, []);\r\n    const [modalInputData, setModalInputData] = useState(defAnswersData);\r\n\r\n    const setInputData = (id: number, value: string) => {\r\n        setModalInputData(modalInputData.map(iD => iD.id === id ? {\r\n            ...iD,\r\n            value\r\n        } : iD));\r\n    };\r\n    useEffect(() => {\r\n        setSaveInputs({f: successCloseModal});\r\n    }, [modalInputData]);\r\n\r\n    const successCloseModal = () => {\r\n        for (const iD of modalInputData) {\r\n            iD.setValue(iD.value)\r\n        }\r\n        if (modalInputData.length > 1) {\r\n            confirm.card\r\n            && confirm.card(modalInputData[0].value, modalInputData[1].value);\r\n        } else {\r\n            confirm.pack\r\n            && confirm.pack(modalInputData[0].value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                modalInputData.map(iD => (\r\n                    <input\r\n                        key={iD.id}\r\n                        value={iD.value}\r\n                        onChange={e => setInputData(iD.id, e.currentTarget.value)}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import React, {CSSProperties} from \"react\";\r\nimport c from \"./Modal.module.scss\";\r\n\r\n\r\ntype ModalType = {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n}\r\n\r\nexport const Modal: React.FC<ModalType> = (\r\n    {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <>\r\n            {enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 20,\r\n\r\n                    ...backgroundStyle,\r\n                }}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'lime',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, {ReactNode, useState} from 'react';\r\nimport {InputData, InputMap} from \"./InputMap\";\r\nimport {Modal} from \"../Modal\";\r\nimport c from \"./ModalInput.module.scss\";\r\n\r\n\r\nexport type ConfirmFunctionType = {\r\n    card?: (question: string, answer: string) => void\r\n    pack?: (packName: string) => void\r\n    none?: () => void\r\n}\r\ntype ModalInputType = {\r\n    show: boolean;\r\n    close: () => void;\r\n\r\n    inputData?: Array<InputData>;\r\n    answer?: string;\r\n    setAnswer?: (answer: string) => void;\r\n    button?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalOnClick?: () => void;\r\n\r\n    confirm: ConfirmFunctionType\r\n    // confirm: (question?: string, answer?: string) => void\r\n}\r\n\r\nexport const ModalInput: React.FC<ModalInputType> = (\r\n    {\r\n        inputData,\r\n        answer,\r\n        setAnswer = (answer: string) => {\r\n        },\r\n\r\n        button = 'OK',\r\n\r\n        enableBackground,\r\n        backgroundOnClick = () => {\r\n        },\r\n\r\n        width,\r\n        height,\r\n        modalOnClick = () => {\r\n        },\r\n\r\n        show,\r\n        close,\r\n        children,\r\n\r\n        confirm\r\n    }\r\n) => {\r\n    const [answerData, setAnswerData] = useState(answer);\r\n    const [saveInputs, setSaveInputs] = useState({\r\n        f: () => {\r\n        }\r\n    });\r\n\r\n    const successCloseModal = () => {\r\n        saveInputs.f();\r\n        setAnswer(answerData || '');\r\n        setSaveInputs({\r\n            f: () => {\r\n            }\r\n        });\r\n        close();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={() => {\r\n                setAnswerData(answer);\r\n                backgroundOnClick()\r\n            }}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n\r\n            show={show}\r\n        >\r\n            {children ? children : 'question Modal'}\r\n            <div className={c.modalInputContainer}>\r\n                {answer !== undefined && (\r\n                    <input\r\n                        value={answerData}\r\n                        onChange={e => setAnswerData(e.currentTarget.value)}\r\n                    />\r\n                )}\r\n                <InputMap\r\n                    inputData={inputData}\r\n                    setSaveInputs={setSaveInputs}\r\n                    confirm={confirm}\r\n                />\r\n            </div>\r\n            <button onClick={successCloseModal}>{button}</button>\r\n        </Modal>\r\n    );\r\n};\r\n","import React, {ReactNode} from 'react';\r\nimport {Modal} from \"../Modal\";\r\nimport c from \"./ModalQuestion.module.scss\";\r\n\r\n\r\ntype ModalQuestionType = {\r\n    show: boolean;\r\n\r\n    setTrue: () => void;\r\n    setFalse: () => void;\r\n    buttonTrue?: ReactNode;\r\n    buttonFalse?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalOnClick?: () => void;\r\n}\r\n\r\nexport const ModalQuestion: React.FC<ModalQuestionType> = (\r\n    {\r\n        setTrue,\r\n        setFalse,\r\n        buttonTrue = 'Yes',\r\n        buttonFalse = 'No',\r\n\r\n        enableBackground,\r\n        backgroundOnClick = () => {\r\n        },\r\n\r\n        width,\r\n        height,\r\n        modalOnClick = () => {\r\n        },\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={backgroundOnClick}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n\r\n            show={show}\r\n        >\r\n            {children ? children : 'question Modal'}\r\n            <div className={c.modalQuestionContainer}>\r\n                <button onClick={setFalse}>\r\n                    {buttonFalse}\r\n                </button>\r\n                <button onClick={setTrue}>\r\n                    {buttonTrue}\r\n                </button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport c from \"./Paginator.module.scss\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    page: number\r\n    pageCount: number\r\n    itemsTotalCount: number\r\n    changePageCount: (pageCount: number) => void\r\n    changePage: (page: number) => void\r\n}\r\nexport const Paginator: React.FC<PaginatorPropsType> = React.memo((\r\n    {\r\n        page,\r\n        pageCount,\r\n        itemsTotalCount,\r\n        changePageCount,\r\n        changePage,\r\n    }\r\n) => {\r\n    const pagesCount = Math.ceil(itemsTotalCount / pageCount);\r\n    const portionSize = 10;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const onPreviousClick = () => {\r\n        setPortionNumber(portionNumber - 1);\r\n    }\r\n    const onNextClick = () => {\r\n        setPortionNumber(portionNumber + 1);\r\n    }\r\n    const onChangePageCount = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        changePageCount(+e.target.value);\r\n    }\r\n\r\n    const pagesList = pages\r\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map(p => {\r\n        const onChangeCurrentPageHandler = () => {\r\n            changePage(p);\r\n        }\r\n\r\n        return (\r\n            <span\r\n                key={p}\r\n                className={page === p ? c.pageSelected : ''}\r\n                onClick={onChangeCurrentPageHandler}\r\n                style={{margin: '0 5px', cursor: 'pointer'}}\r\n            >\r\n                {p}\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={c.paginatorContainer}>\r\n            <button\r\n                onClick={onPreviousClick}\r\n                disabled={portionNumber <= 1}>\r\n                ◀\r\n            </button>\r\n            {pagesList}\r\n            <button\r\n                onClick={onNextClick}\r\n                disabled={portionCount <= portionNumber}>\r\n                ▶\r\n            </button>\r\n            <label>\r\n                <select\r\n                    name=\"countOfItems\"\r\n                    onChange={onChangePageCount}\r\n                    value={pageCount}\r\n                >\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"15\">15</option>\r\n                </select> Items per page\r\n            </label>\r\n        </div>\r\n    )\r\n});","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport c from \"./Packs.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    GetPacksRequestType,\r\n    GetPacksResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {\r\n    addNewPack,\r\n    deletePack,\r\n    getPacks,\r\n    updatePack\r\n} from \"../../../bll/thunks/thunks\";\r\nimport {setRequestParams} from \"../../../bll/reducers/packsReducer\";\r\nimport {Spin} from \"antd\";\r\nimport {Pack} from \"./pack/Pack\";\r\nimport {ModalInput} from \"../../common/Modal/input/ModalInput\";\r\nimport {ModalQuestion} from \"../../common/Modal/question/ModalQuestion\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\n\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacks());\r\n    }, []);\r\n\r\n    const {\r\n        cardPacks,\r\n        cardPacksTotalCount,\r\n        pageCount,\r\n        page\r\n    } = useSelector<RootStateType, GetPacksResponseType>(\r\n        state => state.packs.response\r\n    );\r\n    const sortPacks = useSelector<RootStateType, string | undefined>(\r\n        state => state.packs.request.sortPacks\r\n    );\r\n    const myId = useSelector<RootStateType, string | undefined>(\r\n        state => state.profile._id\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const params = useSelector<RootStateType, GetPacksRequestType>(\r\n        state => state.packs.request\r\n    );\r\n\r\n    const [searchPack, setSearchPack] = useState<string>('');\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [deleteMode, setDeleteMode] = useState<boolean>(false);\r\n\r\n    const [packId, setPackId] = useState<string>('');\r\n    const [packName, setPackName] = useState<string>('');\r\n\r\n    const close = () => {\r\n        setPackId('');\r\n        setPackName('');\r\n        setEditMode(false);\r\n        setDeleteMode(false);\r\n    }\r\n\r\n    const confirm = (packName: string) => {\r\n        packId\r\n            ? dispatch(updatePack({\r\n                cardsPack: {\r\n                    _id: packId,\r\n                    name: packName\r\n                }\r\n            }))\r\n            : dispatch(addNewPack({\r\n                cardsPack: {\r\n                    name: packName\r\n                }\r\n            }));\r\n    }\r\n\r\n    const onMyClick = () => {\r\n        dispatch(setRequestParams({...params, user_id: myId}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onAllClick = () => {\r\n        dispatch(setRequestParams({...params, user_id: undefined}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onAddNewPackClick = () => {\r\n        setEditMode(true);\r\n    }\r\n    const onChangeInputSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchPack(e.currentTarget.value);\r\n    }\r\n    const onSearchClick = () => {\r\n        dispatch(setRequestParams({...params, packName: searchPack}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onChangePageCount = (pageCount: number) => {\r\n        dispatch(setRequestParams({...params, pageCount}))\r\n        dispatch(getPacks());\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setRequestParams({...params, page}))\r\n        dispatch(getPacks());\r\n    }\r\n    const onSortUpByDate = () => {\r\n        dispatch(setRequestParams({...params, sortPacks: '0updated'}));\r\n        dispatch(getPacks());\r\n    }\r\n    const onSortDownByDate = () => {\r\n        dispatch(setRequestParams({...params, sortPacks: '1updated'}));\r\n        dispatch(getPacks());\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={c.packsContainer}>\r\n            <ModalInput\r\n                show={editMode}\r\n                close={close}\r\n                inputData={[[packName, setPackName]]}\r\n                enableBackground={true}\r\n                backgroundOnClick={close}\r\n                height={200}\r\n                width={300}\r\n                button={packId ? 'Edit' : 'Add'}\r\n                confirm={{pack: confirm}}\r\n            >\r\n                {packId ? 'Edit Pack' : 'Add New Pack'}\r\n            </ModalInput>\r\n            <ModalQuestion\r\n                show={deleteMode}\r\n                setTrue={() => {\r\n                    dispatch(deletePack(packId));\r\n                    close();\r\n                }}\r\n                setFalse={close}\r\n                width={300}\r\n                height={200}\r\n                enableBackground={true}\r\n                backgroundOnClick={close}\r\n            >\r\n                Are you sure about this?\r\n            </ModalQuestion>\r\n            <div className={c.titleContainer}>\r\n                <h2>Packs list</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChangeInputSearch}\r\n                    value={params.packName}/>\r\n                <button onClick={onSearchClick}>Search</button>\r\n            </div>\r\n            <div className={c.bodyContainer}>\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onMyClick}>My</button>\r\n                    <button onClick={onAllClick}>All</button>\r\n                    <button onClick={onAddNewPackClick}>Add new pack\r\n                    </button>\r\n                </div>\r\n                <div className={c.tableContainer}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Cards</th>\r\n                            <th>\r\n                                Last Updated {\r\n                                sortPacks === '0updated'\r\n                                    ? <button\r\n                                        onClick={onSortDownByDate}>▲</button>\r\n                                    :\r\n                                    <button onClick={onSortUpByDate}>▼</button>\r\n                            }\r\n                            </th>\r\n                            <th>Created by</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {\r\n                            cardPacks.map(pack => <Pack\r\n                                    key={pack._id}\r\n                                    _id={pack._id}\r\n                                    user_id={pack.user_id}\r\n                                    myId={myId}\r\n                                    name={pack.name}\r\n                                    cardsCount={pack.cardsCount}\r\n                                    updated={new Date(pack.updated).toLocaleDateString()}\r\n                                    created={new Date(pack.created).toLocaleDateString()}\r\n                                    onDeleteClick={() => {\r\n                                        setPackId(pack._id);\r\n                                        setDeleteMode(true);\r\n                                    }}\r\n                                    onEditClick={() => {\r\n                                        setPackId(pack._id);\r\n                                        setPackName(pack.name);\r\n                                        setEditMode(true);\r\n                                    }}\r\n                                    onLearnClick={() => history.push('/learn/' + pack._id + '/' + pack.name)}\r\n                                />\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className={c.footerContainer}>\r\n                <div className={c.paginationContainer}>\r\n                    <Paginator\r\n                        page={page}\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardPacksTotalCount}\r\n                        changePageCount={onChangePageCount}\r\n                        changePage={onChangePage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\ntype CardPropsType = {\r\n    user_id: string\r\n    cardsPack_id: string\r\n    myId?: string\r\n    _id: string\r\n    question: string\r\n    answer: string\r\n    updated: string\r\n    grade: number\r\n    onDeleteClick: () => void\r\n    onEditClick: () => void\r\n}\r\nexport const Card: React.FC<CardPropsType> = (\r\n    {\r\n        user_id,\r\n        myId,\r\n        _id,\r\n        question,\r\n        answer,\r\n        updated,\r\n        grade,\r\n        onDeleteClick,\r\n        onEditClick\r\n    }\r\n) => {\r\n    return (\r\n        <tr key={_id}>\r\n            <td>{question}</td>\r\n            <td>{answer}</td>\r\n            <td>{updated}</td>\r\n            <td>{grade}</td>\r\n            {\r\n                user_id === myId &&\r\n                <td>\r\n                    <button onClick={onDeleteClick}>\r\n                        Delete\r\n                    </button>\r\n                    <button onClick={onEditClick}>\r\n                        Edit\r\n                    </button>\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport c from \"./Cards.module.scss\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    GetCardsRequestType,\r\n    GetCardsResponseType,\r\n    RootStateType\r\n} from \"../../../types/types\";\r\nimport {\r\n    addNewCard,\r\n    deleteCard,\r\n    getCards,\r\n    updateCard\r\n} from \"../../../bll/thunks/thunks\";\r\nimport {Spin} from \"antd\";\r\nimport {Paginator} from \"../../common/Paginator/Paginator\";\r\nimport {setRequestParams} from \"../../../bll/reducers/cardsReducer\";\r\nimport {Card} from \"./card/Card\";\r\nimport {ModalInput} from \"../../common/Modal/input/ModalInput\";\r\nimport {ModalQuestion} from \"../../common/Modal/question/ModalQuestion\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const {\r\n        packId,\r\n        packName\r\n    } = useParams<{ packId: string, packName: string }>();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCards(packId));\r\n    }, []);\r\n\r\n    const {\r\n        cards,\r\n        cardsTotalCount,\r\n        pageCount,\r\n        page,\r\n        packUserId\r\n    } = useSelector<RootStateType, GetCardsResponseType>(\r\n        state => state.cards.response\r\n    );\r\n    const sortCards = useSelector<RootStateType, string | undefined>(\r\n        state => state.cards.request.sortCards\r\n    );\r\n    const myId = useSelector<RootStateType, string | undefined>(\r\n        state => state.profile._id\r\n    );\r\n    const isLoading = useSelector<RootStateType, boolean>(\r\n        state => state.app.isLoading\r\n    );\r\n    const params = useSelector<RootStateType, GetCardsRequestType>(\r\n        state => state.cards.request\r\n    );\r\n\r\n    const [searchQuestion, setSearchQuestion] = useState<string>('');\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [deleteMode, setDeleteMode] = useState<boolean>(false);\r\n\r\n    const [cardId, setCardId] = useState<string>('');\r\n    const [question, setQuestion] = useState<string>('');\r\n    const [answer, setAnswer] = useState<string>('');\r\n\r\n    const close = () => {\r\n        setCardId('');\r\n        setQuestion('');\r\n        setAnswer('');\r\n        setEditMode(false);\r\n        setDeleteMode(false);\r\n    }\r\n    const confirm = (question: string, answer: string) => {\r\n        cardId\r\n            ? dispatch(updateCard({\r\n                card: {\r\n                    cardsPack_id: packId,\r\n                    _id: cardId,\r\n                    question,\r\n                    answer\r\n                }\r\n            }))\r\n            : dispatch(addNewCard({\r\n                card: {\r\n                    cardsPack_id: packId,\r\n                    question,\r\n                    answer\r\n                }\r\n            }));\r\n    }\r\n\r\n    const onAddNewCardClick = () => {\r\n        setEditMode(true);\r\n    }\r\n    const onChangeInputSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuestion(e.currentTarget.value);\r\n    }\r\n    const onSearchClick = () => {\r\n        dispatch(setRequestParams({...params, cardQuestion: searchQuestion}));\r\n        dispatch(getCards(packId))\r\n    }\r\n    const onChangePageCount = (pageCount: number) => {\r\n        dispatch(setRequestParams({...params, pageCount}));\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(setRequestParams({...params, page}))\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onSortUpByGrade = () => {\r\n        dispatch(setRequestParams({...params, sortCards: '0grade'}));\r\n        dispatch(getCards(packId));\r\n    }\r\n    const onSortDownByGrade = () => {\r\n        dispatch(setRequestParams({...params, sortCards: '1grade'}));\r\n        dispatch(getCards(packId));\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <div style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            top: '30%',\r\n            textAlign: 'center'\r\n        }}>\r\n            <Spin size={\"large\"}/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={c.cardsContainer}>\r\n            <ModalInput\r\n                show={editMode}\r\n                close={close}\r\n                inputData={[[question, setQuestion], [answer, setAnswer]]}\r\n                enableBackground={true}\r\n                backgroundOnClick={close}\r\n                height={200}\r\n                width={300}\r\n                button={cardId ? 'Edit' : 'Add'}\r\n                confirm={{card: confirm}}\r\n            >\r\n                {cardId ? 'Edit Card' : 'Add New Card'}\r\n            </ModalInput>\r\n            <ModalQuestion\r\n                show={deleteMode}\r\n                setTrue={() => {\r\n                    dispatch(deleteCard(cardId, packId));\r\n                    close();\r\n                }}\r\n                setFalse={close}\r\n                width={300}\r\n                height={200}\r\n                enableBackground={true}\r\n                backgroundOnClick={close}\r\n            >\r\n                Are you sure about this?\r\n            </ModalQuestion>\r\n            <div className={c.titleContainer}>\r\n                <h2>{packName}</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChangeInputSearch}\r\n                    value={params.cardQuestion}/>\r\n                <button onClick={onSearchClick}>Search</button>\r\n            </div>\r\n            <div className={c.bodyContainer}>\r\n                <div className={c.buttonContainer}>\r\n                    <button onClick={onAddNewCardClick}>Add new card</button>\r\n                </div>\r\n                <div className={c.tableContainer}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Question</th>\r\n                            <th>Answer</th>\r\n                            <th>Last Updated</th>\r\n                            <th>\r\n                                Grade {\r\n                                sortCards === '0grade'\r\n                                    ? <button\r\n                                        onClick={onSortDownByGrade}>▲</button>\r\n                                    :\r\n                                    <button onClick={onSortUpByGrade}>▼</button>\r\n                            }\r\n                            </th>\r\n                            {\r\n                                packUserId === myId && <th>Actions</th>\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            cards.map(card => <Card\r\n                                    key={card._id}\r\n                                    user_id={card.user_id}\r\n                                    cardsPack_id={card.cardsPack_id}\r\n                                    myId={myId}\r\n                                    _id={card._id}\r\n                                    question={card.question}\r\n                                    answer={card.answer}\r\n                                    updated={new Date(card.updated).toLocaleDateString()}\r\n                                    grade={card.grade}\r\n                                    onDeleteClick={() => {\r\n                                        setCardId(card._id);\r\n                                        setDeleteMode(true);\r\n                                    }}\r\n                                    onEditClick={() => {\r\n                                        setCardId(card._id);\r\n                                        setQuestion(card.question);\r\n                                        setAnswer(card.answer);\r\n                                        setEditMode(true);\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className={c.footerContainer}>\r\n                <div className={c.paginationContainer}>\r\n                    <Paginator\r\n                        page={page}\r\n                        pageCount={pageCount}\r\n                        itemsTotalCount={cardsTotalCount}\r\n                        changePageCount={onChangePageCount}\r\n                        changePage={onChangePage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Modal} from \"./Modal\";\r\n\r\nexport const ModalContainer: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => setShow(true)}>show simple Modal</button>\r\n            <Modal\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n                // modalOnClick={() => setShow(false)}\r\n\r\n                show={show}\r\n            >\r\n                Simple Modal\r\n                <button onClick={() => setShow(false)}>Close</button>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {ModalInput} from \"./ModalInput\";\r\n\r\n\r\nexport const ModalInputContainer: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [answer, setAnswer] = useState('test answer');\r\n\r\n    const [value1, setValue1] = useState('');\r\n    const [value2, setValue2] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}>show input Modal</button>\r\n                {answer}-{value1}-{value2}\r\n            </div>\r\n\r\n            <ModalInput\r\n                show={show}\r\n                close={() => setShow(false)}\r\n\r\n                answer={answer}\r\n                setAnswer={setAnswer}\r\n\r\n                inputData={[[value1, setValue1], [value2, setValue2]]}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n\r\n                confirm={{none:() => {}}}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import React, {CSSProperties, useEffect, useState} from 'react';\r\nimport {Modal} from \"../Modal\";\r\n\r\n\r\ntype ModalMessageType = {\r\n    show: boolean;\r\n    close: () => void;\r\n\r\n    startTop?: number;\r\n    endTop?: number;\r\n    time?: number;\r\n    speed?: number;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n}\r\n\r\nexport const ModalMessage: React.FC<ModalMessageType> = (\r\n    {\r\n        startTop = -50,\r\n        endTop = 30,\r\n        time = 1500,\r\n        speed = 10,\r\n\r\n        enableBackground = false,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        close,\r\n        children,\r\n    }\r\n) => {\r\n    const [top, setTop] = useState(startTop);\r\n    const [updateInnerEndTop, setUpdateInnerEndTop] = useState<{f: (endTop: number) => void} | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (updateInnerEndTop) {\r\n            updateInnerEndTop.f(endTop);\r\n        }\r\n    }, [endTop, updateInnerEndTop]);\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            let innerTop = startTop;\r\n            let innerEndTop = endTop;\r\n            const setInnerEndTop = (endTop: number) => innerEndTop = endTop;\r\n            setUpdateInnerEndTop({f: setInnerEndTop}); // subscribe\r\n\r\n            const timer = setInterval(() => {\r\n                if (innerTop + speed > innerEndTop) {\r\n\r\n                    setTimeout(() => {\r\n                        clearInterval(timer);\r\n                        const timer2 = setInterval(() => {\r\n                            innerTop -= speed;\r\n                            setTop(innerTop);\r\n\r\n                            if (innerTop < startTop) {\r\n                                setUpdateInnerEndTop(null); // unsubscribe\r\n                                clearInterval(timer2);\r\n                                setTop(startTop);\r\n                                close();\r\n                            }\r\n                        }, 30)\r\n                    }, time);\r\n                } else {\r\n                    innerTop += speed;\r\n                    setTop(innerTop);\r\n                }\r\n            }, 30)\r\n        }\r\n    }, [show]);\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={backgroundOnClick}\r\n            backgroundStyle={backgroundStyle}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n            modalStyle={{\r\n                ...modalStyle,\r\n                top: top + 'px',\r\n            }}\r\n\r\n            show={show}\r\n        >\r\n            {children ? children : 'message Modal'}\r\n        </Modal>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {ModalMessage} from \"./ModalMessage\";\r\n\r\n\r\nexport const ModalMessageContainer: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}>show message Modal</button>\r\n            </div>\r\n\r\n            <ModalMessage\r\n                show={show}\r\n                close={() => setShow(false)}\r\n\r\n                width={100}\r\n                height={50}\r\n            >\r\n                <span>message</span>\r\n                <span>Modal</span>\r\n            </ModalMessage>\r\n        </>\r\n    );\r\n};\r\n","import React, {CSSProperties, ReactNode, useEffect, useState} from 'react';\r\nimport {ModalMessage} from \"./ModalMessage\";\r\n\r\n\r\nexport type StackModalType = {\r\n    id?: number;\r\n    showClose: {\r\n        show: boolean;\r\n        close: () => void;\r\n    };\r\n\r\n    startTop?: number;\r\n    endTop?: number;\r\n    time?: number;\r\n    speed?: number;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n    children?: ReactNode;\r\n}\r\n\r\ntype ModalMessageStackPropsType = {\r\n    setAddNewModal: (addNewModal: { f: (modal: StackModalType) => void }) => void;\r\n\r\n    defEndTop?: number;\r\n    defMiddle?: number;\r\n    defHeight?: number;\r\n}\r\n\r\nexport const ModalMessageStack: React.FC<ModalMessageStackPropsType> = (\r\n    {\r\n        setAddNewModal,\r\n\r\n        defEndTop = 30,\r\n        defMiddle = 20,\r\n        defHeight = 50,\r\n    }\r\n) => {\r\n    const [modals, setModals] = useState<Array<StackModalType>>([]);\r\n\r\n    const newId = () => {\r\n        return modals.reduce((acc, m) => acc < (m.id || 0) ? (m.id || 0): acc, 0) + 1;\r\n    };\r\n    const addModal = (modal: StackModalType) => {\r\n        const newModals = modals.filter(mf => mf.showClose.show);\r\n        setModals([\r\n            ...newModals.map((m, i, arr) =>\r\n                ({...m, endTop: (m.endTop || defEndTop) + defMiddle + (i > 0 ? arr[i - 1].height : defHeight)})),\r\n            {...modal, id: !modal.id ? newId() : modal.id}\r\n        ]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setAddNewModal({f: addModal});\r\n    }, [setAddNewModal, modals]);\r\n\r\n    return (\r\n        <>\r\n            {modals.map(m => {\r\n                let show = m.showClose.show;\r\n                const close = () => {\r\n                    m.showClose.close();\r\n                };\r\n                return (\r\n                    <ModalMessage\r\n                        key={m.id}\r\n                        {...m}\r\n                        show={show}\r\n                        close={close}\r\n                    >\r\n                        {m.children ? m.children : 'message'}\r\n                    </ModalMessage>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {ModalMessageStack, StackModalType} from \"./ModalMessageStack\";\r\n\r\n\r\nconst successModal: StackModalType = {\r\n    showClose: {\r\n        show: true,\r\n        close() {\r\n            this.show = false\r\n        },\r\n    },\r\n    endTop: 30,\r\n\r\n    width: 100,\r\n    height: 50,\r\n    children: 'success',\r\n};\r\nconst errorModal: StackModalType = {\r\n    showClose: {\r\n        show: true,\r\n        close() {\r\n            this.show = false\r\n        },\r\n    },\r\n    endTop: 30,\r\n\r\n    width: 100,\r\n    height: 50,\r\n    children: 'error',\r\n    modalStyle: {background: 'red'},\r\n};\r\n\r\nexport const ModalMessageStackContainer: React.FC = () => {\r\n    const [addNewModal, setAddNewModal] = useState({f: (modal: StackModalType) => {}}); // subscribe\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexFlow: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}\r\n            >\r\n                <div>\r\n                    <button\r\n                        onClick={() => addNewModal.f({...successModal, showClose: {...successModal.showClose}})}\r\n                    >\r\n                        add success\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={() => addNewModal.f({...errorModal, showClose: {...errorModal.showClose}})}\r\n                    >\r\n                        add error\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <ModalMessageStack\r\n                setAddNewModal={setAddNewModal}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {ModalQuestion} from \"./ModalQuestion\";\r\n\r\n\r\nexport const ModalQuestionContainer: React.FC = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [answer, setAnswer] = useState(false);\r\n\r\n    const setTrue = () => {\r\n        setAnswer(true);\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setAnswer(false);\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}>show question Modal</button>\r\n                {answer ? <span>Yes</span> : <span>No</span>}\r\n            </div>\r\n\r\n            <ModalQuestion\r\n                show={show}\r\n\r\n                setTrue={setTrue}\r\n                setFalse={setFalse}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Modal} from \"../Modal\";\r\n\r\n\r\ntype ModalUpType = {\r\n    speed?: number\r\n}\r\n\r\nexport const ModalUp: React.FC<ModalUpType> = ({speed = 10}) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.scrollY > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.scrollY / speed;\r\n        let lastState = window.scrollY;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.scrollY) clearInterval(innerTimer);\r\n            lastState = window.scrollY;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.scrollY === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                enableBackground={false}\r\n\r\n                width={70}\r\n                height={50}\r\n                modalOnClick={scroll}\r\n                modalStyle={{\r\n                    top: '80vh',\r\n                    left: '20px'\r\n                }}\r\n\r\n                show={show}\r\n            >\r\n                Up\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {ModalContainer} from \"../../common/Modal/ModalContainer\";\r\nimport {ModalInputContainer} from \"../../common/Modal/input/ModalInputContainer\";\r\nimport {ModalMessageContainer} from \"../../common/Modal/message/ModalMessageContainer\";\r\nimport {ModalMessageStackContainer} from \"../../common/Modal/message/ModalMessageStackContainer\";\r\nimport {ModalQuestionContainer} from \"../../common/Modal/question/ModalQuestionContainer\";\r\nimport {ModalUp} from \"../../common/Modal/up/ModalUp\";\r\n\r\n\r\nexport const ModalsPage = () => {\r\n  return(\r\n      <div\r\n          style={{\r\n              display: 'flex',\r\n              flexFlow: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n          }}\r\n      >\r\n          <div style={{height: '40vh'}}/>\r\n\r\n          <ModalContainer/>\r\n          <ModalQuestionContainer/>\r\n          <ModalInputContainer/>\r\n          <ModalMessageContainer/>\r\n          <ModalMessageStackContainer/>\r\n          <ModalUp/>\r\n\r\n          <div style={{height: '300vh'}}/>\r\n      </div>\r\n  )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CardType, RootStateType} from \"../../../types/types\";\r\nimport {changeGrade, getCards} from \"../../../bll/thunks/thunks\";\r\nimport c from \"./LearnPage.module.scss\";\r\n\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const LearnPage = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const {cards} = useSelector((store: RootStateType) => store.cards.response);\r\n    const {\r\n        packId,\r\n        packName\r\n    } = useParams<{ packId: string, packName: string }>();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n        created: '',\r\n        updated: '',\r\n        user_id: '',\r\n        __v: 0\r\n    });\r\n\r\n    const [grade, setGrade] = useState<number>(0);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (first) {\r\n            dispatch(getCards(packId));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, packId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n        dispatch(changeGrade({card_id: card._id, grade}));\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={c.learnPageContainer}>\r\n            <h3>{`Learn '${packName}'`}</h3>\r\n\r\n            <div><b>Question:</b> {card.question}</div>\r\n            <div>\r\n                <button onClick={() => setIsChecked(true)}>check</button>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div><b>Answer:</b> {card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <button key={'grade-' + i}\r\n                                onClick={() => setGrade(i + 1)}>{g}</button>\r\n                    ))}\r\n\r\n                    <div>\r\n                        <button onClick={onNext}>next</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./login/Login\";\r\nimport {Registration} from \"./registration/Registration\";\r\nimport {Profile} from \"./profile/Profile\";\r\nimport {Error404} from \"./error-404/Error404\";\r\nimport {PasswordRecovery} from \"./password-recovery/PasswordRecovery\";\r\nimport {EnterNewPassword} from \"./enter-new-password/EnterNewPassword\";\r\nimport React from \"react\";\r\nimport {Test} from \"./test/Test\";\r\nimport {Packs} from \"./packs/Packs\";\r\nimport {Cards} from \"./cards/Cards\";\r\nimport {ModalsPage} from \"./modals/ModalsPage\";\r\nimport {LearnPage} from \"./learn-page/LearnPage\";\r\n\r\n\r\nexport const PATH = {\r\n    TEST: '/test',\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/password_recovery',\r\n    ENTER_NEW_PASSWORD: '/enter_new_password',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:packId/:packName',\r\n    MODALS: '/modals',\r\n    LEARN: '/learn/:packId/:packName'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n                <Route path={PATH.MODALS} render={() => <ModalsPage/>}/>\r\n                <Route path={PATH.LEARN} render={() => <LearnPage/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport c from './Header.module.scss';\r\nimport {PATH} from \"../pages/Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logOut} from \"../../bll/thunks/thunks\";\r\n\r\n\r\ntype HeaderPropsType = {\r\n    isLogged: boolean\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (\r\n    {\r\n        isLogged\r\n    }\r\n) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogOutClickHandler = () => {\r\n        dispatch(logOut());\r\n    }\r\n\r\n    return (\r\n        <div className={c.navbar}>\r\n            <NavLink to={PATH.TEST}\r\n                     activeClassName={c.active}>Test</NavLink>\r\n            <NavLink to={PATH.LOGIN}\r\n                     activeClassName={c.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}\r\n                     activeClassName={c.active}>Registration</NavLink>\r\n            <NavLink to={PATH.PROFILE}\r\n                     activeClassName={c.active}>Profile</NavLink>\r\n            <NavLink to={PATH.PASSWORD_RECOVERY}\r\n                     activeClassName={c.active}>Password\r\n                Recovery</NavLink>\r\n            <NavLink to={PATH.ENTER_NEW_PASSWORD}\r\n                     activeClassName={c.active}>Enter new\r\n                password</NavLink>\r\n            <NavLink to={PATH.PACKS}\r\n                     activeClassName={c.active}>Packs</NavLink>\r\n            <NavLink to={PATH.CARDS}\r\n                     activeClassName={c.active}>Cards</NavLink>\r\n            <NavLink to={PATH.MODALS}\r\n                     activeClassName={c.active}>Modals</NavLink>\r\n            <NavLink to={PATH.LEARN}\r\n                     activeClassName={c.active}>Learn</NavLink>\r\n            {\r\n                isLogged\r\n                && <NavLink to={PATH.LOGIN}\r\n                            onClick={onLogOutClickHandler}\r\n                            style={{position: 'absolute', right: 0}}\r\n                            activeClassName={c.active}>Log Out\r\n                </NavLink>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport './App.module.scss';\nimport {Header} from \"./components/Header/Header\";\nimport {Routes} from \"./components/pages/Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAppInitialize} from \"./bll/thunks/thunks\";\nimport {AppStateType, RootStateType} from \"./types/types\";\nimport {Spin} from \"antd\";\n\n\nfunction App() {\n    const {isInitialized} = useSelector<RootStateType, AppStateType>(\n        state => state.app\n    );\n    const isLogged = useSelector<RootStateType, boolean>(\n        state => state.login.isLogged\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setAppInitialize());\n    }, []);\n\n    if (!isInitialized) {\n        return <div style={{\n            position: 'fixed',\n            width: '100%',\n            top: '30%',\n            textAlign: 'center'\n        }}>\n            <Spin size={'large'}/>\n        </div>\n    }\n\n    return (\n        <div className=\"App\">\n            <Header isLogged={isLogged}/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\n\r\nexport const enterNewPasswordReducer = (state: any = initialState, action: any): any => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};","import {combineReducers} from \"redux\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {enterNewPasswordReducer} from \"./reducers/enterNewPasswordReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {passwordRecoveryReducer} from \"./reducers/passwordRecoveryReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\nimport {packsReducer} from \"./reducers/packsReducer\";\r\nimport {cardsReducer} from \"./reducers/cardsReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    enterNewPassword: enterNewPasswordReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n});\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__VOz3e\",\"active\":\"Header_active__3b-fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsContainer\":\"Packs_packsContainer__1j9X8\",\"titleContainer\":\"Packs_titleContainer__12q41\",\"bodyContainer\":\"Packs_bodyContainer__v2LNg\",\"tableContainer\":\"Packs_tableContainer__3i6cR\",\"footerContainer\":\"Packs_footerContainer__2xAX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"Cards_cardsContainer__1YYxp\",\"titleContainer\":\"Cards_titleContainer__1x5w-\",\"bodyContainer\":\"Cards_bodyContainer__1LDTe\",\"tableContainer\":\"Cards_tableContainer__2DEgA\",\"footerContainer\":\"Cards_footerContainer__2A75k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__2jRvF\",\"e404\":\"Error404_e404__1XAnU\",\"title\":\"Error404_title__-3RXk\",\"pic\":\"Error404_pic__3XQTn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPageContainer\":\"Login_loginPageContainer__2BTAz\",\"buttonContainer\":\"Login_buttonContainer__2LDQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__vXl9z\",\"buttonContainer\":\"Registration_buttonContainer__1O8qL\"};"],"sourceRoot":""}